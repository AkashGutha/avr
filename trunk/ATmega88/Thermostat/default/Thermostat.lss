
Thermostat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000152  00800100  0000151e  000015b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000151e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800252  00800252  00001704  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000023d  00000000  00000000  00001744  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000801  00000000  00000000  00001981  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000025f  00000000  00000000  00002182  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007e1  00000000  00000000  000023e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00002bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000290  00000000  00000000  00002cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000235  00000000  00000000  00002f44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	de c3       	rjmp	.+1980   	; 0x7cc <__vector_7>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	e5 c1       	rjmp	.+970    	; 0x3e2 <__vector_11>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	73 c1       	rjmp	.+742    	; 0x304 <__vector_14>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
      22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	d4 e0       	ldi	r29, 0x04	; 4
      3c:	de bf       	out	0x3e, r29	; 62
      3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
      40:	12 e0       	ldi	r17, 0x02	; 2
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	b1 e0       	ldi	r27, 0x01	; 1
      46:	ee e1       	ldi	r30, 0x1E	; 30
      48:	f5 e1       	ldi	r31, 0x15	; 21
      4a:	02 c0       	rjmp	.+4      	; 0x50 <.do_copy_data_start>

0000004c <.do_copy_data_loop>:
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0

00000050 <.do_copy_data_start>:
      50:	a2 35       	cpi	r26, 0x52	; 82
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <.do_copy_data_loop>

00000056 <__do_clear_bss>:
      56:	12 e0       	ldi	r17, 0x02	; 2
      58:	a2 e5       	ldi	r26, 0x52	; 82
      5a:	b2 e0       	ldi	r27, 0x02	; 2
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	ac 35       	cpi	r26, 0x5C	; 92
      62:	b1 07       	cpc	r27, r17
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	42 d4       	rcall	.+2180   	; 0x8ec <main>
      68:	58 ca       	rjmp	.-2896   	; 0xfffff51a <__eeprom_end+0xff7ef51a>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <therm_reset>:
uint8_t therm_reset()
{
  uint8_t i;

  //Pull line low and wait for 480uS
  THERM_LOW();
      6c:	e5 e2       	ldi	r30, 0x25	; 37
      6e:	f0 e0       	ldi	r31, 0x00	; 0
      70:	80 81       	ld	r24, Z
      72:	8e 7f       	andi	r24, 0xFE	; 254
      74:	80 83       	st	Z, r24
  THERM_OUTPUT_MODE();
      76:	e4 e2       	ldi	r30, 0x24	; 36
      78:	f0 e0       	ldi	r31, 0x00	; 0
      7a:	80 81       	ld	r24, Z
      7c:	81 60       	ori	r24, 0x01	; 1
      7e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      80:	80 ec       	ldi	r24, 0xC0	; 192
      82:	93 e0       	ldi	r25, 0x03	; 3
      84:	01 97       	sbiw	r24, 0x01	; 1
      86:	f1 f7       	brne	.-4      	; 0x84 <therm_reset+0x18>
  _delay_us(480);

  //Release line and wait for 60uS
  THERM_INPUT_MODE();
      88:	80 81       	ld	r24, Z
      8a:	8e 7f       	andi	r24, 0xFE	; 254
      8c:	80 83       	st	Z, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
      8e:	80 ea       	ldi	r24, 0xA0	; 160
      90:	8a 95       	dec	r24
      92:	f1 f7       	brne	.-4      	; 0x90 <therm_reset+0x24>
  _delay_us(60);

  //Store line value and wait until the completion of 480uS period
  i=(THERM_PIN & (1<<THERM_DQ));
      94:	83 b1       	in	r24, 0x03	; 3
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      96:	e8 e4       	ldi	r30, 0x48	; 72
      98:	f3 e0       	ldi	r31, 0x03	; 3
      9a:	31 97       	sbiw	r30, 0x01	; 1
      9c:	f1 f7       	brne	.-4      	; 0x9a <therm_reset+0x2e>
  _delay_us(420);

  //Return the value read from the presence pulse (0=OK, 1=WRONG)
  return i;
}
      9e:	81 70       	andi	r24, 0x01	; 1
      a0:	08 95       	ret

000000a2 <therm_write_bit>:

void therm_write_bit(uint8_t bit)
{
  //Pull line low for 1uS
  THERM_LOW();
      a2:	e5 e2       	ldi	r30, 0x25	; 37
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	90 81       	ld	r25, Z
      a8:	9e 7f       	andi	r25, 0xFE	; 254
      aa:	90 83       	st	Z, r25
  THERM_OUTPUT_MODE();
      ac:	e4 e2       	ldi	r30, 0x24	; 36
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	90 81       	ld	r25, Z
      b2:	91 60       	ori	r25, 0x01	; 1
      b4:	90 83       	st	Z, r25
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
      b6:	92 e0       	ldi	r25, 0x02	; 2
      b8:	9a 95       	dec	r25
      ba:	f1 f7       	brne	.-4      	; 0xb8 <therm_write_bit+0x16>
  _delay_us(1);

  //If we want to write 1, release the line (if not will keep low)
  if(bit) THERM_INPUT_MODE();
      bc:	88 23       	and	r24, r24
      be:	19 f0       	breq	.+6      	; 0xc6 <therm_write_bit+0x24>
      c0:	80 81       	ld	r24, Z
      c2:	8e 7f       	andi	r24, 0xFE	; 254
      c4:	80 83       	st	Z, r24
      c6:	80 ea       	ldi	r24, 0xA0	; 160
      c8:	8a 95       	dec	r24
      ca:	f1 f7       	brne	.-4      	; 0xc8 <therm_write_bit+0x26>

  //Wait for 60uS and release the line
  _delay_us(60);
  THERM_INPUT_MODE();
      cc:	e4 e2       	ldi	r30, 0x24	; 36
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	8e 7f       	andi	r24, 0xFE	; 254
      d4:	80 83       	st	Z, r24
}
      d6:	08 95       	ret

000000d8 <therm_read_bit>:
uint8_t therm_read_bit(void)
{
  uint8_t bit=0;

  //Pull line low for 1uS
  THERM_LOW();
      d8:	e5 e2       	ldi	r30, 0x25	; 37
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	80 81       	ld	r24, Z
      de:	8e 7f       	andi	r24, 0xFE	; 254
      e0:	80 83       	st	Z, r24
  THERM_OUTPUT_MODE();
      e2:	e4 e2       	ldi	r30, 0x24	; 36
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	80 81       	ld	r24, Z
      e8:	81 60       	ori	r24, 0x01	; 1
      ea:	80 83       	st	Z, r24
      ec:	82 e0       	ldi	r24, 0x02	; 2
      ee:	8a 95       	dec	r24
      f0:	f1 f7       	brne	.-4      	; 0xee <therm_read_bit+0x16>
  _delay_us(1);

  //Release line and wait for 14uS
  THERM_INPUT_MODE();
      f2:	80 81       	ld	r24, Z
      f4:	8e 7f       	andi	r24, 0xFE	; 254
      f6:	80 83       	st	Z, r24
      f8:	85 e2       	ldi	r24, 0x25	; 37
      fa:	8a 95       	dec	r24
      fc:	f1 f7       	brne	.-4      	; 0xfa <therm_read_bit+0x22>
  _delay_us(14);

  //Read line value
  if(THERM_PIN&(1<<THERM_DQ)) bit=1;
      fe:	83 b1       	in	r24, 0x03	; 3
     100:	98 e7       	ldi	r25, 0x78	; 120
     102:	9a 95       	dec	r25
     104:	f1 f7       	brne	.-4      	; 0x102 <therm_read_bit+0x2a>

  //Wait for 45uS to end and return read value
  _delay_us(45);
  return bit;
}
     106:	81 70       	andi	r24, 0x01	; 1
     108:	08 95       	ret

0000010a <therm_read_byte>:

uint8_t therm_read_byte(void)
{
     10a:	0f 93       	push	r16
     10c:	1f 93       	push	r17
     10e:	00 e0       	ldi	r16, 0x00	; 0
     110:	17 e0       	ldi	r17, 0x07	; 7
  uint8_t i=8, n=0;
  while(i--)
  {
    //Shift one position right and store read value
    n>>=1;
    n|=(therm_read_bit()<<7);
     112:	e2 df       	rcall	.-60     	; 0xd8 <therm_read_bit>
     114:	90 2f       	mov	r25, r16
     116:	96 95       	lsr	r25
     118:	87 95       	ror	r24
     11a:	88 27       	eor	r24, r24
     11c:	87 95       	ror	r24
     11e:	08 2f       	mov	r16, r24
     120:	09 2b       	or	r16, r25
}

uint8_t therm_read_byte(void)
{
  uint8_t i=8, n=0;
  while(i--)
     122:	11 50       	subi	r17, 0x01	; 1
     124:	b0 f7       	brcc	.-20     	; 0x112 <therm_read_byte+0x8>
    //Shift one position right and store read value
    n>>=1;
    n|=(therm_read_bit()<<7);
  }
  return n;
}
     126:	80 2f       	mov	r24, r16
     128:	1f 91       	pop	r17
     12a:	0f 91       	pop	r16
     12c:	08 95       	ret

0000012e <therm_write_byte>:

void therm_write_byte(uint8_t byte)
{
     12e:	0f 93       	push	r16
     130:	1f 93       	push	r17
     132:	08 2f       	mov	r16, r24
     134:	17 e0       	ldi	r17, 0x07	; 7
  uint8_t i=8;
  while(i--)
  {
    //Write actual bit and shift one position right to make the next bit ready
    therm_write_bit(byte&1);
     136:	80 2f       	mov	r24, r16
     138:	81 70       	andi	r24, 0x01	; 1
     13a:	b3 df       	rcall	.-154    	; 0xa2 <therm_write_bit>
    byte>>=1;
     13c:	06 95       	lsr	r16
}

void therm_write_byte(uint8_t byte)
{
  uint8_t i=8;
  while(i--)
     13e:	11 50       	subi	r17, 0x01	; 1
     140:	d0 f7       	brcc	.-12     	; 0x136 <therm_write_byte+0x8>
  {
    //Write actual bit and shift one position right to make the next bit ready
    therm_write_bit(byte&1);
    byte>>=1;
  }
}
     142:	1f 91       	pop	r17
     144:	0f 91       	pop	r16
     146:	08 95       	ret

00000148 <therm_set_resolution>:

void therm_set_resolution(char res)
{
     148:	1f 93       	push	r17
     14a:	18 2f       	mov	r17, r24
  //Reset, skip ROM and start temperature conversion
  therm_reset();
     14c:	8f df       	rcall	.-226    	; 0x6c <therm_reset>
  therm_write_byte(THERM_CMD_SKIPROM);
     14e:	8c ec       	ldi	r24, 0xCC	; 204
     150:	ee df       	rcall	.-36     	; 0x12e <therm_write_byte>
  therm_write_byte(THERM_CMD_WSCRATCHPAD);
     152:	8e e4       	ldi	r24, 0x4E	; 78
     154:	ec df       	rcall	.-40     	; 0x12e <therm_write_byte>
  therm_write_byte(0);
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	ea df       	rcall	.-44     	; 0x12e <therm_write_byte>
  therm_write_byte(0);
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	e8 df       	rcall	.-48     	; 0x12e <therm_write_byte>
  therm_write_byte( 0x1F | (res<<5) );
     15e:	12 95       	swap	r17
     160:	11 0f       	add	r17, r17
     162:	10 7e       	andi	r17, 0xE0	; 224
     164:	81 2f       	mov	r24, r17
     166:	8f 61       	ori	r24, 0x1F	; 31
     168:	e2 df       	rcall	.-60     	; 0x12e <therm_write_byte>
  therm_reset();
     16a:	80 df       	rcall	.-256    	; 0x6c <therm_reset>
}
     16c:	1f 91       	pop	r17
     16e:	08 95       	ret

00000170 <therm_read_temperature>:

short therm_read_temperature(char* buffer)
{
     170:	ef 92       	push	r14
     172:	ff 92       	push	r15
     174:	0f 93       	push	r16
     176:	1f 93       	push	r17
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
     17c:	7c 01       	movw	r14, r24
  uint8_t temperature[2];
  int8_t digit;
  uint16_t decimal;

  //Reset, skip ROM and start temperature conversion
  if(therm_reset()>0)
     17e:	76 df       	rcall	.-276    	; 0x6c <therm_reset>
     180:	88 23       	and	r24, r24
     182:	29 f0       	breq	.+10     	; 0x18e <therm_read_temperature+0x1e>
  {
    buffer[0] = 0;
     184:	f7 01       	movw	r30, r14
     186:	10 82       	st	Z, r1
     188:	c0 e0       	ldi	r28, 0x00	; 0
     18a:	d0 e0       	ldi	r29, 0x00	; 0
     18c:	74 c0       	rjmp	.+232    	; 0x276 <therm_read_temperature+0x106>
    return 0;
  }
  
  therm_write_byte(THERM_CMD_SKIPROM);
     18e:	8c ec       	ldi	r24, 0xCC	; 204
     190:	ce df       	rcall	.-100    	; 0x12e <therm_write_byte>
  therm_write_byte(THERM_CMD_CONVERTTEMP);
     192:	84 e4       	ldi	r24, 0x44	; 68
     194:	cc df       	rcall	.-104    	; 0x12e <therm_write_byte>

  //Wait until conversion is complete
  while(!therm_read_bit());
     196:	a0 df       	rcall	.-192    	; 0xd8 <therm_read_bit>
     198:	88 23       	and	r24, r24
     19a:	e9 f3       	breq	.-6      	; 0x196 <therm_read_temperature+0x26>

  //Reset, skip ROM and send command to read Scratchpad
  therm_reset();
     19c:	67 df       	rcall	.-306    	; 0x6c <therm_reset>
  therm_write_byte(THERM_CMD_SKIPROM);
     19e:	8c ec       	ldi	r24, 0xCC	; 204
     1a0:	c6 df       	rcall	.-116    	; 0x12e <therm_write_byte>
  therm_write_byte(THERM_CMD_RSCRATCHPAD);
     1a2:	8e eb       	ldi	r24, 0xBE	; 190
     1a4:	c4 df       	rcall	.-120    	; 0x12e <therm_write_byte>

  //Read Scratchpad (only 2 first bytes)
  temperature[0]=therm_read_byte();
     1a6:	b1 df       	rcall	.-158    	; 0x10a <therm_read_byte>
     1a8:	08 2f       	mov	r16, r24
  temperature[1]=therm_read_byte();
     1aa:	af df       	rcall	.-162    	; 0x10a <therm_read_byte>
     1ac:	18 2f       	mov	r17, r24
  therm_reset();
     1ae:	5e df       	rcall	.-324    	; 0x6c <therm_reset>

  //Store temperature integer digits and decimal digits
  value = (temperature[1]<<8) | temperature[0];
     1b0:	41 2f       	mov	r20, r17
     1b2:	50 e0       	ldi	r21, 0x00	; 0
     1b4:	34 2f       	mov	r19, r20
     1b6:	22 27       	eor	r18, r18
     1b8:	80 2f       	mov	r24, r16
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	e9 01       	movw	r28, r18
     1be:	c8 2b       	or	r28, r24
     1c0:	d9 2b       	or	r29, r25
  if( value < 0 )  // negative value
     1c2:	dd 23       	and	r29, r29
     1c4:	b4 f4       	brge	.+44     	; 0x1f2 <therm_read_temperature+0x82>
  {
    uint16_t neg_temp = ~((temperature[1]<<8) | temperature[0]) + 1;
     1c6:	88 27       	eor	r24, r24
     1c8:	99 27       	eor	r25, r25
     1ca:	8c 1b       	sub	r24, r28
     1cc:	9d 0b       	sbc	r25, r29
    temperature[0] = neg_temp & 0xFF;
     1ce:	08 2f       	mov	r16, r24
    temperature[1] = neg_temp>>8;

    digit=temperature[0]>>4;
     1d0:	28 2f       	mov	r18, r24
     1d2:	22 95       	swap	r18
     1d4:	2f 70       	andi	r18, 0x0F	; 15
    digit|=(temperature[1]&0x7)<<4;
     1d6:	89 2f       	mov	r24, r25
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	87 70       	andi	r24, 0x07	; 7
     1dc:	90 70       	andi	r25, 0x00	; 0
     1de:	82 95       	swap	r24
     1e0:	92 95       	swap	r25
     1e2:	90 7f       	andi	r25, 0xF0	; 240
     1e4:	98 27       	eor	r25, r24
     1e6:	80 7f       	andi	r24, 0xF0	; 240
     1e8:	98 27       	eor	r25, r24
     1ea:	28 2b       	or	r18, r24
    digit *= -1;
     1ec:	12 2f       	mov	r17, r18
     1ee:	11 95       	neg	r17
     1f0:	0e c0       	rjmp	.+28     	; 0x20e <therm_read_temperature+0x9e>
  }
  else
  {
    digit=temperature[0]>>4;
     1f2:	20 2f       	mov	r18, r16
     1f4:	22 95       	swap	r18
     1f6:	2f 70       	andi	r18, 0x0F	; 15
    digit|=(temperature[1]&0x7)<<4;
     1f8:	ca 01       	movw	r24, r20
     1fa:	87 70       	andi	r24, 0x07	; 7
     1fc:	90 70       	andi	r25, 0x00	; 0
     1fe:	82 95       	swap	r24
     200:	92 95       	swap	r25
     202:	90 7f       	andi	r25, 0xF0	; 240
     204:	98 27       	eor	r25, r24
     206:	80 7f       	andi	r24, 0xF0	; 240
     208:	98 27       	eor	r25, r24
     20a:	12 2f       	mov	r17, r18
     20c:	18 2b       	or	r17, r24
  }
  //Store decimal digits
  decimal=temperature[0]&0xf;
     20e:	20 2f       	mov	r18, r16
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	2f 70       	andi	r18, 0x0F	; 15
     214:	30 70       	andi	r19, 0x00	; 0
  decimal*=THERM_DECIMAL_STEPS_12BIT;
  
  //Format temperature into a string [+XXX.XXXX C]
  sprintf(buffer, "%+04d.%04u", digit, decimal);
     216:	4d b7       	in	r20, 0x3d	; 61
     218:	5e b7       	in	r21, 0x3e	; 62
     21a:	48 50       	subi	r20, 0x08	; 8
     21c:	50 40       	sbci	r21, 0x00	; 0
     21e:	0f b6       	in	r0, 0x3f	; 63
     220:	f8 94       	cli
     222:	5e bf       	out	0x3e, r21	; 62
     224:	0f be       	out	0x3f, r0	; 63
     226:	4d bf       	out	0x3d, r20	; 61
     228:	ed b7       	in	r30, 0x3d	; 61
     22a:	fe b7       	in	r31, 0x3e	; 62
     22c:	31 96       	adiw	r30, 0x01	; 1
     22e:	f1 82       	std	Z+1, r15	; 0x01
     230:	e0 82       	st	Z, r14
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	91 e0       	ldi	r25, 0x01	; 1
     236:	93 83       	std	Z+3, r25	; 0x03
     238:	82 83       	std	Z+2, r24	; 0x02
     23a:	81 2f       	mov	r24, r17
     23c:	99 27       	eor	r25, r25
     23e:	87 fd       	sbrc	r24, 7
     240:	90 95       	com	r25
     242:	95 83       	std	Z+5, r25	; 0x05
     244:	84 83       	std	Z+4, r24	; 0x04
     246:	81 e7       	ldi	r24, 0x71	; 113
     248:	92 e0       	ldi	r25, 0x02	; 2
     24a:	ac 01       	movw	r20, r24
     24c:	24 9f       	mul	r18, r20
     24e:	c0 01       	movw	r24, r0
     250:	25 9f       	mul	r18, r21
     252:	90 0d       	add	r25, r0
     254:	34 9f       	mul	r19, r20
     256:	90 0d       	add	r25, r0
     258:	11 24       	eor	r1, r1
     25a:	97 83       	std	Z+7, r25	; 0x07
     25c:	86 83       	std	Z+6, r24	; 0x06
     25e:	97 d6       	rcall	.+3374   	; 0xf8e <sprintf>
  buffer[11] = digit;
     260:	f7 01       	movw	r30, r14
     262:	13 87       	std	Z+11, r17	; 0x0b
     264:	4d b7       	in	r20, 0x3d	; 61
     266:	5e b7       	in	r21, 0x3e	; 62
     268:	48 5f       	subi	r20, 0xF8	; 248
     26a:	5f 4f       	sbci	r21, 0xFF	; 255
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	5e bf       	out	0x3e, r21	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	4d bf       	out	0x3d, r20	; 61

  return value;
}
     276:	8c 2f       	mov	r24, r28
     278:	9d 2f       	mov	r25, r29
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	ff 90       	pop	r15
     284:	ef 90       	pop	r14
     286:	08 95       	ret

00000288 <init>:
  }
}

void init()
{
  cli();
     288:	f8 94       	cli

  DDRC = 0xFF;
     28a:	8f ef       	ldi	r24, 0xFF	; 255
     28c:	87 b9       	out	0x07, r24	; 7
  PORTC = 0x00;
     28e:	18 b8       	out	0x08, r1	; 8

  DDRD = 0xFF;
     290:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0xFF;
     292:	8b b9       	out	0x0b, r24	; 11

  DDRB = 0x03;
     294:	83 e0       	ldi	r24, 0x03	; 3
     296:	84 b9       	out	0x04, r24	; 4
  PORTB = 0x00;
     298:	15 b8       	out	0x05, r1	; 5
  //PORTB = 0xFF;

  //EIMSK |= (1<<INT0);
  //EICRA = 0x02;

  OCR0A = count0;
     29a:	80 91 42 01 	lds	r24, 0x0142
     29e:	87 bd       	out	0x27, r24	; 39
  TIMSK0 |= (1<<OCIE0A);
     2a0:	ee e6       	ldi	r30, 0x6E	; 110
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	80 81       	ld	r24, Z
     2a6:	82 60       	ori	r24, 0x02	; 2
     2a8:	80 83       	st	Z, r24
  TCCR0B |= prescaler0;
     2aa:	e5 e4       	ldi	r30, 0x45	; 69
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	90 91 43 01 	lds	r25, 0x0143
     2b4:	89 2b       	or	r24, r25
     2b6:	80 83       	st	Z, r24

  OCR1A = count1;
     2b8:	80 91 44 01 	lds	r24, 0x0144
     2bc:	90 91 45 01 	lds	r25, 0x0145
     2c0:	90 93 89 00 	sts	0x0089, r25
     2c4:	80 93 88 00 	sts	0x0088, r24
  TIMSK1 |= (1<<OCIE1A);
     2c8:	ef e6       	ldi	r30, 0x6F	; 111
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	80 81       	ld	r24, Z
     2ce:	82 60       	ori	r24, 0x02	; 2
     2d0:	80 83       	st	Z, r24
  TCCR1B |= prescaler1;
     2d2:	e1 e8       	ldi	r30, 0x81	; 129
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	90 91 46 01 	lds	r25, 0x0146
     2dc:	89 2b       	or	r24, r25
     2de:	80 83       	st	Z, r24

  OCR2A = count2;
     2e0:	80 91 47 01 	lds	r24, 0x0147
     2e4:	80 93 b3 00 	sts	0x00B3, r24
  TIMSK2 |= (1<<OCIE2A);
     2e8:	e0 e7       	ldi	r30, 0x70	; 112
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	80 81       	ld	r24, Z
     2ee:	82 60       	ori	r24, 0x02	; 2
     2f0:	80 83       	st	Z, r24
  TCCR2B |= prescaler2;
     2f2:	e1 eb       	ldi	r30, 0xB1	; 177
     2f4:	f0 e0       	ldi	r31, 0x00	; 0
     2f6:	80 81       	ld	r24, Z
     2f8:	90 91 49 01 	lds	r25, 0x0149
     2fc:	89 2b       	or	r24, r25
     2fe:	80 83       	st	Z, r24
  /*
  ADMUX = (1<<REFS0) | (1<<ADLAR) | 0x07;
  ADCSRA = (1<<ADEN) | (1<<ADSC) | (1<<ADATE) | (1<<ADIE) | 0x07;
  */

  sei();  
     300:	78 94       	sei
}
     302:	08 95       	ret

00000304 <__vector_14>:
}

// Display multiplexing

ISR(TIMER0_COMPA_vect)
{
     304:	1f 92       	push	r1
     306:	0f 92       	push	r0
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	0f 92       	push	r0
     30c:	11 24       	eor	r1, r1
     30e:	2f 93       	push	r18
     310:	3f 93       	push	r19
     312:	4f 93       	push	r20
     314:	8f 93       	push	r24
     316:	9f 93       	push	r25
     318:	ef 93       	push	r30
     31a:	ff 93       	push	r31
  TCNT0 = 0;
     31c:	16 bc       	out	0x26, r1	; 38
  PORTD = 0xFF;
     31e:	8f ef       	ldi	r24, 0xFF	; 255
     320:	8b b9       	out	0x0b, r24	; 11

  if( blink_mode > 0 )
     322:	20 91 57 02 	lds	r18, 0x0257
     326:	30 91 58 02 	lds	r19, 0x0258
     32a:	21 15       	cp	r18, r1
     32c:	31 05       	cpc	r19, r1
     32e:	91 f0       	breq	.+36     	; 0x354 <__vector_14+0x50>
  {
    blink_counter++;
     330:	80 91 59 02 	lds	r24, 0x0259
     334:	8f 5f       	subi	r24, 0xFF	; 255
     336:	80 93 59 02 	sts	0x0259, r24
    if( blink_counter == blink_mode )
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	28 17       	cp	r18, r24
     33e:	39 07       	cpc	r19, r25
     340:	c9 f4       	brne	.+50     	; 0x374 <__vector_14+0x70>
    {
      blink_counter = 0;
     342:	10 92 59 02 	sts	0x0259, r1
      blink_status = 1 - blink_status;
     346:	90 91 41 01 	lds	r25, 0x0141
     34a:	81 e0       	ldi	r24, 0x01	; 1
     34c:	89 1b       	sub	r24, r25
     34e:	80 93 41 01 	sts	0x0141, r24
     352:	10 c0       	rjmp	.+32     	; 0x374 <__vector_14+0x70>
    }
  }
  else
    blink_status = 1;
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	80 93 41 01 	sts	0x0141, r24

  PORTC = (PINC & 16) | mux[i];
     35a:	96 b1       	in	r25, 0x06	; 6
     35c:	40 91 56 02 	lds	r20, 0x0256
     360:	24 2f       	mov	r18, r20
     362:	30 e0       	ldi	r19, 0x00	; 0
     364:	f9 01       	movw	r30, r18
     366:	ec 5c       	subi	r30, 0xCC	; 204
     368:	fe 4f       	sbci	r31, 0xFE	; 254
     36a:	90 71       	andi	r25, 0x10	; 16
     36c:	80 81       	ld	r24, Z
     36e:	98 2b       	or	r25, r24
     370:	98 b9       	out	0x08, r25	; 8
     372:	10 c0       	rjmp	.+32     	; 0x394 <__vector_14+0x90>
     374:	96 b1       	in	r25, 0x06	; 6
     376:	40 91 56 02 	lds	r20, 0x0256
     37a:	24 2f       	mov	r18, r20
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	f9 01       	movw	r30, r18
     380:	ec 5c       	subi	r30, 0xCC	; 204
     382:	fe 4f       	sbci	r31, 0xFE	; 254
     384:	90 71       	andi	r25, 0x10	; 16
     386:	80 81       	ld	r24, Z
     388:	98 2b       	or	r25, r24
     38a:	98 b9       	out	0x08, r25	; 8

  if( blink_status == 1 )
     38c:	80 91 41 01 	lds	r24, 0x0141
     390:	81 30       	cpi	r24, 0x01	; 1
     392:	81 f4       	brne	.+32     	; 0x3b4 <__vector_14+0xb0>
  {
    if( mode == MODE_SET )
     394:	80 91 40 01 	lds	r24, 0x0140
     398:	88 23       	and	r24, r24
     39a:	31 f4       	brne	.+12     	; 0x3a8 <__vector_14+0xa4>
      PORTD = display[ i + 4 ];
     39c:	f9 01       	movw	r30, r18
     39e:	e4 5c       	subi	r30, 0xC4	; 196
     3a0:	fe 4f       	sbci	r31, 0xFE	; 254
     3a2:	80 81       	ld	r24, Z
     3a4:	8b b9       	out	0x0b, r24	; 11
     3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <__vector_14+0xb4>
    else
      PORTD = display[ i ];
     3a8:	f9 01       	movw	r30, r18
     3aa:	e8 5c       	subi	r30, 0xC8	; 200
     3ac:	fe 4f       	sbci	r31, 0xFE	; 254
     3ae:	80 81       	ld	r24, Z
     3b0:	8b b9       	out	0x0b, r24	; 11
     3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <__vector_14+0xb4>
  }
  else
    PORTD = 0xFF;
     3b4:	8f ef       	ldi	r24, 0xFF	; 255
     3b6:	8b b9       	out	0x0b, r24	; 11

  (i==3) ? i=0 : i++;
     3b8:	43 30       	cpi	r20, 0x03	; 3
     3ba:	19 f4       	brne	.+6      	; 0x3c2 <__vector_14+0xbe>
     3bc:	10 92 56 02 	sts	0x0256, r1
     3c0:	04 c0       	rjmp	.+8      	; 0x3ca <__vector_14+0xc6>
     3c2:	84 2f       	mov	r24, r20
     3c4:	8f 5f       	subi	r24, 0xFF	; 255
     3c6:	80 93 56 02 	sts	0x0256, r24
}
     3ca:	ff 91       	pop	r31
     3cc:	ef 91       	pop	r30
     3ce:	9f 91       	pop	r25
     3d0:	8f 91       	pop	r24
     3d2:	4f 91       	pop	r20
     3d4:	3f 91       	pop	r19
     3d6:	2f 91       	pop	r18
     3d8:	0f 90       	pop	r0
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	0f 90       	pop	r0
     3de:	1f 90       	pop	r1
     3e0:	18 95       	reti

000003e2 <__vector_11>:
}

// Temperature reading

ISR(TIMER1_COMPA_vect, ISR_NOBLOCK)
{
     3e2:	78 94       	sei
     3e4:	1f 92       	push	r1
     3e6:	0f 92       	push	r0
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	0f 92       	push	r0
     3ec:	11 24       	eor	r1, r1
     3ee:	0f 93       	push	r16
     3f0:	1f 93       	push	r17
     3f2:	2f 93       	push	r18
     3f4:	3f 93       	push	r19
     3f6:	4f 93       	push	r20
     3f8:	5f 93       	push	r21
     3fa:	6f 93       	push	r22
     3fc:	7f 93       	push	r23
     3fe:	8f 93       	push	r24
     400:	9f 93       	push	r25
     402:	af 93       	push	r26
     404:	bf 93       	push	r27
     406:	ef 93       	push	r30
     408:	ff 93       	push	r31
  TCNT1 = 0;
     40a:	10 92 85 00 	sts	0x0085, r1
     40e:	10 92 84 00 	sts	0x0084, r1
  if( mode == MODE_DISPLAY )
     412:	80 91 40 01 	lds	r24, 0x0140
     416:	81 30       	cpi	r24, 0x01	; 1
     418:	09 f0       	breq	.+2      	; 0x41c <__vector_11+0x3a>
     41a:	e8 c0       	rjmp	.+464    	; 0x5ec <__stack+0xed>
  {
    current_temp = therm_read_temperature(temp_buf);
     41c:	01 e1       	ldi	r16, 0x11	; 17
     41e:	11 e0       	ldi	r17, 0x01	; 1
     420:	c8 01       	movw	r24, r16
     422:	a6 de       	rcall	.-692    	; 0x170 <therm_read_temperature>
     424:	9c 01       	movw	r18, r24
     426:	90 93 53 02 	sts	0x0253, r25
     42a:	80 93 52 02 	sts	0x0252, r24

    if( temp_buf[11]<10 )
     42e:	f8 01       	movw	r30, r16
     430:	93 85       	ldd	r25, Z+11	; 0x0b
     432:	9a 30       	cpi	r25, 0x0A	; 10
     434:	34 f4       	brge	.+12     	; 0x442 <__vector_11+0x60>
      PORTB |= (1<<PB1);
     436:	e5 e2       	ldi	r30, 0x25	; 37
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	82 60       	ori	r24, 0x02	; 2
     43e:	80 83       	st	Z, r24
     440:	04 c0       	rjmp	.+8      	; 0x44a <__vector_11+0x68>
    else
      PORTB &= ~(0<<PB1);
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	80 83       	st	Z, r24
    if( temp_buf[0] != 0 )
     44a:	80 91 11 01 	lds	r24, 0x0111
     44e:	88 23       	and	r24, r24
     450:	09 f4       	brne	.+2      	; 0x454 <__vector_11+0x72>
     452:	c0 c0       	rjmp	.+384    	; 0x5d4 <__stack+0xd5>
    {
      if( current_temp < 0 )
     454:	33 23       	and	r19, r19
     456:	4c f5       	brge	.+82     	; 0x4aa <__vector_11+0xc8>
      {
        display[0] = nr[ CHAR_MINUS ];
     458:	48 e3       	ldi	r20, 0x38	; 56
     45a:	51 e0       	ldi	r21, 0x01	; 1
     45c:	23 e3       	ldi	r18, 0x33	; 51
     45e:	31 e0       	ldi	r19, 0x01	; 1
     460:	f9 01       	movw	r30, r18
     462:	80 81       	ld	r24, Z
     464:	da 01       	movw	r26, r20
     466:	8d 93       	st	X+, r24
        display[1] = nr[ temp_buf[3] - 0x30 ] & 0xFE;
     468:	64 e1       	ldi	r22, 0x14	; 20
     46a:	71 e0       	ldi	r23, 0x01	; 1
     46c:	fb 01       	movw	r30, r22
     46e:	80 81       	ld	r24, Z
     470:	99 27       	eor	r25, r25
     472:	87 fd       	sbrc	r24, 7
     474:	90 95       	com	r25
     476:	2c 50       	subi	r18, 0x0C	; 12
     478:	30 40       	sbci	r19, 0x00	; 0
     47a:	f9 01       	movw	r30, r18
     47c:	e8 0f       	add	r30, r24
     47e:	f9 1f       	adc	r31, r25
     480:	f0 97       	sbiw	r30, 0x30	; 48
     482:	80 81       	ld	r24, Z
     484:	8e 7f       	andi	r24, 0xFE	; 254
     486:	8c 93       	st	X, r24
        display[2] = nr[ temp_buf[5] - 0x30 ];
     488:	fb 01       	movw	r30, r22
     48a:	82 81       	ldd	r24, Z+2	; 0x02
     48c:	99 27       	eor	r25, r25
     48e:	87 fd       	sbrc	r24, 7
     490:	90 95       	com	r25
     492:	f9 01       	movw	r30, r18
     494:	e8 0f       	add	r30, r24
     496:	f9 1f       	adc	r31, r25
     498:	f0 97       	sbiw	r30, 0x30	; 48
     49a:	80 81       	ld	r24, Z
     49c:	fa 01       	movw	r30, r20
     49e:	82 83       	std	Z+2, r24	; 0x02
        display[3] = nr[ CHAR_C ];
     4a0:	f9 01       	movw	r30, r18
     4a2:	83 85       	ldd	r24, Z+11	; 0x0b
     4a4:	fa 01       	movw	r30, r20
     4a6:	83 83       	std	Z+3, r24	; 0x03
     4a8:	a1 c0       	rjmp	.+322    	; 0x5ec <__stack+0xed>
      }
      else if( temp_buf[11]>=0 && temp_buf[11]<10 )
     4aa:	89 2f       	mov	r24, r25
     4ac:	9a 30       	cpi	r25, 0x0A	; 10
     4ae:	30 f5       	brcc	.+76     	; 0x4fc <__vector_11+0x11a>
      {
        display[0] = 0xFF;
     4b0:	48 e3       	ldi	r20, 0x38	; 56
     4b2:	51 e0       	ldi	r21, 0x01	; 1
     4b4:	da 01       	movw	r26, r20
     4b6:	8f ef       	ldi	r24, 0xFF	; 255
     4b8:	8d 93       	st	X+, r24
        display[1] = nr[ temp_buf[3] - 0x30 ] & 0xFE;
     4ba:	64 e1       	ldi	r22, 0x14	; 20
     4bc:	71 e0       	ldi	r23, 0x01	; 1
     4be:	fb 01       	movw	r30, r22
     4c0:	80 81       	ld	r24, Z
     4c2:	99 27       	eor	r25, r25
     4c4:	87 fd       	sbrc	r24, 7
     4c6:	90 95       	com	r25
     4c8:	27 e2       	ldi	r18, 0x27	; 39
     4ca:	31 e0       	ldi	r19, 0x01	; 1
     4cc:	f9 01       	movw	r30, r18
     4ce:	e8 0f       	add	r30, r24
     4d0:	f9 1f       	adc	r31, r25
     4d2:	f0 97       	sbiw	r30, 0x30	; 48
     4d4:	80 81       	ld	r24, Z
     4d6:	8e 7f       	andi	r24, 0xFE	; 254
     4d8:	8c 93       	st	X, r24
        display[2] = nr[ temp_buf[5] - 0x30 ];
     4da:	fb 01       	movw	r30, r22
     4dc:	82 81       	ldd	r24, Z+2	; 0x02
     4de:	99 27       	eor	r25, r25
     4e0:	87 fd       	sbrc	r24, 7
     4e2:	90 95       	com	r25
     4e4:	f9 01       	movw	r30, r18
     4e6:	e8 0f       	add	r30, r24
     4e8:	f9 1f       	adc	r31, r25
     4ea:	f0 97       	sbiw	r30, 0x30	; 48
     4ec:	80 81       	ld	r24, Z
     4ee:	fa 01       	movw	r30, r20
     4f0:	82 83       	std	Z+2, r24	; 0x02
        display[3] = nr[ CHAR_C ];
     4f2:	f9 01       	movw	r30, r18
     4f4:	83 85       	ldd	r24, Z+11	; 0x0b
     4f6:	fa 01       	movw	r30, r20
     4f8:	83 83       	std	Z+3, r24	; 0x03
     4fa:	78 c0       	rjmp	.+240    	; 0x5ec <__stack+0xed>
      }
      else if( temp_buf[11]>=10 && temp_buf[11]<100 )
     4fc:	8a 50       	subi	r24, 0x0A	; 10
     4fe:	8a 35       	cpi	r24, 0x5A	; 90
     500:	80 f5       	brcc	.+96     	; 0x562 <__stack+0x63>
      {
        display[0] = nr[ temp_buf[2] - 0x30 ];
     502:	68 e3       	ldi	r22, 0x38	; 56
     504:	71 e0       	ldi	r23, 0x01	; 1
     506:	03 e1       	ldi	r16, 0x13	; 19
     508:	11 e0       	ldi	r17, 0x01	; 1
     50a:	f8 01       	movw	r30, r16
     50c:	81 91       	ld	r24, Z+
     50e:	9f 01       	movw	r18, r30
     510:	99 27       	eor	r25, r25
     512:	87 fd       	sbrc	r24, 7
     514:	90 95       	com	r25
     516:	47 e2       	ldi	r20, 0x27	; 39
     518:	51 e0       	ldi	r21, 0x01	; 1
     51a:	fa 01       	movw	r30, r20
     51c:	e8 0f       	add	r30, r24
     51e:	f9 1f       	adc	r31, r25
     520:	f0 97       	sbiw	r30, 0x30	; 48
     522:	80 81       	ld	r24, Z
     524:	db 01       	movw	r26, r22
     526:	8d 93       	st	X+, r24
        display[1] = nr[ temp_buf[3] - 0x30 ] & 0xFE;
     528:	f9 01       	movw	r30, r18
     52a:	80 81       	ld	r24, Z
     52c:	99 27       	eor	r25, r25
     52e:	87 fd       	sbrc	r24, 7
     530:	90 95       	com	r25
     532:	fa 01       	movw	r30, r20
     534:	e8 0f       	add	r30, r24
     536:	f9 1f       	adc	r31, r25
     538:	f0 97       	sbiw	r30, 0x30	; 48
     53a:	80 81       	ld	r24, Z
     53c:	8e 7f       	andi	r24, 0xFE	; 254
     53e:	8c 93       	st	X, r24
        display[2] = nr[ temp_buf[5] - 0x30 ];
     540:	f8 01       	movw	r30, r16
     542:	83 81       	ldd	r24, Z+3	; 0x03
     544:	99 27       	eor	r25, r25
     546:	87 fd       	sbrc	r24, 7
     548:	90 95       	com	r25
     54a:	fa 01       	movw	r30, r20
     54c:	e8 0f       	add	r30, r24
     54e:	f9 1f       	adc	r31, r25
     550:	f0 97       	sbiw	r30, 0x30	; 48
     552:	80 81       	ld	r24, Z
     554:	fb 01       	movw	r30, r22
     556:	82 83       	std	Z+2, r24	; 0x02
        display[3] = nr[ CHAR_C ];
     558:	fa 01       	movw	r30, r20
     55a:	83 85       	ldd	r24, Z+11	; 0x0b
     55c:	fb 01       	movw	r30, r22
     55e:	83 83       	std	Z+3, r24	; 0x03
     560:	45 c0       	rjmp	.+138    	; 0x5ec <__stack+0xed>
      }
      else
      {
        display[0] = nr[ temp_buf[1] - 0x30 ];
     562:	08 e3       	ldi	r16, 0x38	; 56
     564:	11 e0       	ldi	r17, 0x01	; 1
     566:	62 e1       	ldi	r22, 0x12	; 18
     568:	71 e0       	ldi	r23, 0x01	; 1
     56a:	fb 01       	movw	r30, r22
     56c:	81 91       	ld	r24, Z+
     56e:	af 01       	movw	r20, r30
     570:	99 27       	eor	r25, r25
     572:	87 fd       	sbrc	r24, 7
     574:	90 95       	com	r25
     576:	a7 e2       	ldi	r26, 0x27	; 39
     578:	b1 e0       	ldi	r27, 0x01	; 1
     57a:	fd 01       	movw	r30, r26
     57c:	e8 0f       	add	r30, r24
     57e:	f9 1f       	adc	r31, r25
     580:	f0 97       	sbiw	r30, 0x30	; 48
     582:	80 81       	ld	r24, Z
     584:	f8 01       	movw	r30, r16
     586:	81 93       	st	Z+, r24
     588:	9f 01       	movw	r18, r30
        display[1] = nr[ temp_buf[2] - 0x30 ];
     58a:	fa 01       	movw	r30, r20
     58c:	80 81       	ld	r24, Z
     58e:	99 27       	eor	r25, r25
     590:	87 fd       	sbrc	r24, 7
     592:	90 95       	com	r25
     594:	fd 01       	movw	r30, r26
     596:	e8 0f       	add	r30, r24
     598:	f9 1f       	adc	r31, r25
     59a:	f0 97       	sbiw	r30, 0x30	; 48
     59c:	80 81       	ld	r24, Z
     59e:	f9 01       	movw	r30, r18
     5a0:	80 83       	st	Z, r24
        display[2] = nr[ temp_buf[3] - 0x30 ] & 0xFE;
     5a2:	fb 01       	movw	r30, r22
     5a4:	82 81       	ldd	r24, Z+2	; 0x02
     5a6:	99 27       	eor	r25, r25
     5a8:	87 fd       	sbrc	r24, 7
     5aa:	90 95       	com	r25
     5ac:	fd 01       	movw	r30, r26
     5ae:	e8 0f       	add	r30, r24
     5b0:	f9 1f       	adc	r31, r25
     5b2:	f0 97       	sbiw	r30, 0x30	; 48
     5b4:	80 81       	ld	r24, Z
     5b6:	8e 7f       	andi	r24, 0xFE	; 254
     5b8:	f8 01       	movw	r30, r16
     5ba:	82 83       	std	Z+2, r24	; 0x02
        display[3] = nr[ temp_buf[5] - 0x30 ];
     5bc:	fb 01       	movw	r30, r22
     5be:	84 81       	ldd	r24, Z+4	; 0x04
     5c0:	99 27       	eor	r25, r25
     5c2:	87 fd       	sbrc	r24, 7
     5c4:	90 95       	com	r25
     5c6:	a8 0f       	add	r26, r24
     5c8:	b9 1f       	adc	r27, r25
     5ca:	d0 97       	sbiw	r26, 0x30	; 48
     5cc:	8c 91       	ld	r24, X
     5ce:	f8 01       	movw	r30, r16
     5d0:	83 83       	std	Z+3, r24	; 0x03
     5d2:	0c c0       	rjmp	.+24     	; 0x5ec <__stack+0xed>
      }
    }
    else  // DS18B20 init failed
    {
      display[0] = nr[ CHAR_MINUS ];
     5d4:	80 91 33 01 	lds	r24, 0x0133
     5d8:	a8 e3       	ldi	r26, 0x38	; 56
     5da:	b1 e0       	ldi	r27, 0x01	; 1
     5dc:	fd 01       	movw	r30, r26
     5de:	81 93       	st	Z+, r24
      display[1] = nr[ CHAR_MINUS ];
     5e0:	80 83       	st	Z, r24
      display[2] = nr[ CHAR_MINUS ];
     5e2:	12 96       	adiw	r26, 0x02	; 2
     5e4:	8c 93       	st	X, r24
     5e6:	12 97       	sbiw	r26, 0x02	; 2
      display[3] = nr[ CHAR_MINUS ];
     5e8:	13 96       	adiw	r26, 0x03	; 3
     5ea:	8c 93       	st	X, r24
    }
  }


  if( pause == 0 )  
     5ec:	80 91 55 02 	lds	r24, 0x0255
     5f0:	88 23       	and	r24, r24
     5f2:	19 f5       	brne	.+70     	; 0x63a <__stack+0x13b>
      PORTC &= ~(1 << 4);
    }

    #else

    if( current_temp >= set_temp + TEMP_DELTA )
     5f4:	20 91 23 01 	lds	r18, 0x0123
     5f8:	30 91 24 01 	lds	r19, 0x0124
     5fc:	40 91 52 02 	lds	r20, 0x0252
     600:	50 91 53 02 	lds	r21, 0x0253
     604:	c9 01       	movw	r24, r18
     606:	08 96       	adiw	r24, 0x08	; 8
     608:	48 17       	cp	r20, r24
     60a:	59 07       	cpc	r21, r25
     60c:	44 f0       	brlt	.+16     	; 0x61e <__stack+0x11f>
    {
      status = 0;
     60e:	10 92 54 02 	sts	0x0254, r1
      PORTC &= ~(1 << 4);
     612:	e8 e2       	ldi	r30, 0x28	; 40
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	80 81       	ld	r24, Z
     618:	8f 7e       	andi	r24, 0xEF	; 239
     61a:	80 83       	st	Z, r24
     61c:	13 c0       	rjmp	.+38     	; 0x644 <__stack+0x145>
    }
    else if( current_temp <= set_temp - TEMP_DELTA )
     61e:	c9 01       	movw	r24, r18
     620:	08 97       	sbiw	r24, 0x08	; 8
     622:	84 17       	cp	r24, r20
     624:	95 07       	cpc	r25, r21
     626:	74 f0       	brlt	.+28     	; 0x644 <__stack+0x145>
    {
      status = 1;
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	80 93 54 02 	sts	0x0254, r24
      PORTC |= (1 << 4);
     62e:	e8 e2       	ldi	r30, 0x28	; 40
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	80 61       	ori	r24, 0x10	; 16
     636:	80 83       	st	Z, r24
     638:	05 c0       	rjmp	.+10     	; 0x644 <__stack+0x145>

    #endif
  }
  else
  {
    PORTC &= ~(1 << 4);
     63a:	e8 e2       	ldi	r30, 0x28	; 40
     63c:	f0 e0       	ldi	r31, 0x00	; 0
     63e:	80 81       	ld	r24, Z
     640:	8f 7e       	andi	r24, 0xEF	; 239
     642:	80 83       	st	Z, r24
  }
}
     644:	ff 91       	pop	r31
     646:	ef 91       	pop	r30
     648:	bf 91       	pop	r27
     64a:	af 91       	pop	r26
     64c:	9f 91       	pop	r25
     64e:	8f 91       	pop	r24
     650:	7f 91       	pop	r23
     652:	6f 91       	pop	r22
     654:	5f 91       	pop	r21
     656:	4f 91       	pop	r20
     658:	3f 91       	pop	r19
     65a:	2f 91       	pop	r18
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	1f 90       	pop	r1
     668:	18 95       	reti

0000066a <temp_to_buffer>:
uint8_t prescaler2 = 7;

// ========================================================

void temp_to_buffer(short temp)
{
     66a:	ef 92       	push	r14
     66c:	ff 92       	push	r15
     66e:	0f 93       	push	r16
     670:	1f 93       	push	r17
  short conv = temp * 6.25;
     672:	aa 27       	eor	r26, r26
     674:	97 fd       	sbrc	r25, 7
     676:	a0 95       	com	r26
     678:	ba 2f       	mov	r27, r26
     67a:	bc 01       	movw	r22, r24
     67c:	cd 01       	movw	r24, r26
     67e:	40 d2       	rcall	.+1152   	; 0xb00 <__floatsisf>
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	48 ec       	ldi	r20, 0xC8	; 200
     686:	50 e4       	ldi	r21, 0x40	; 64
     688:	46 d1       	rcall	.+652    	; 0x916 <__mulsf3>
     68a:	94 d2       	rcall	.+1320   	; 0xbb4 <__fixsfsi>
     68c:	7b 01       	movw	r14, r22
     68e:	8c 01       	movw	r16, r24
     690:	8b 01       	movw	r16, r22
  
  sprintf(set_temp_buf,"%+05d", conv);
     692:	00 d0       	rcall	.+0      	; 0x694 <temp_to_buffer+0x2a>
     694:	00 d0       	rcall	.+0      	; 0x696 <temp_to_buffer+0x2c>
     696:	00 d0       	rcall	.+0      	; 0x698 <temp_to_buffer+0x2e>
     698:	ed b7       	in	r30, 0x3d	; 61
     69a:	fe b7       	in	r31, 0x3e	; 62
     69c:	31 96       	adiw	r30, 0x01	; 1
     69e:	8d e1       	ldi	r24, 0x1D	; 29
     6a0:	91 e0       	ldi	r25, 0x01	; 1
     6a2:	91 83       	std	Z+1, r25	; 0x01
     6a4:	80 83       	st	Z, r24
     6a6:	8b e0       	ldi	r24, 0x0B	; 11
     6a8:	91 e0       	ldi	r25, 0x01	; 1
     6aa:	93 83       	std	Z+3, r25	; 0x03
     6ac:	82 83       	std	Z+2, r24	; 0x02
     6ae:	f5 82       	std	Z+5, r15	; 0x05
     6b0:	e4 82       	std	Z+4, r14	; 0x04
     6b2:	6d d4       	rcall	.+2266   	; 0xf8e <sprintf>

  if(conv < 0)
     6b4:	8d b7       	in	r24, 0x3d	; 61
     6b6:	9e b7       	in	r25, 0x3e	; 62
     6b8:	06 96       	adiw	r24, 0x06	; 6
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	f8 94       	cli
     6be:	9e bf       	out	0x3e, r25	; 62
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	8d bf       	out	0x3d, r24	; 61
     6c4:	ff 20       	and	r15, r15
     6c6:	3c f5       	brge	.+78     	; 0x716 <temp_to_buffer+0xac>
  {
    display[4] = nr[ CHAR_MINUS ];
     6c8:	6c e3       	ldi	r22, 0x3C	; 60
     6ca:	71 e0       	ldi	r23, 0x01	; 1
     6cc:	a3 e3       	ldi	r26, 0x33	; 51
     6ce:	b1 e0       	ldi	r27, 0x01	; 1
     6d0:	8c 91       	ld	r24, X
     6d2:	fb 01       	movw	r30, r22
     6d4:	81 93       	st	Z+, r24
     6d6:	af 01       	movw	r20, r30
    display[5] = nr[ set_temp_buf[2] - 0x30 ] & 0xFE;
     6d8:	2f e1       	ldi	r18, 0x1F	; 31
     6da:	31 e0       	ldi	r19, 0x01	; 1
     6dc:	f9 01       	movw	r30, r18
     6de:	81 91       	ld	r24, Z+
     6e0:	9f 01       	movw	r18, r30
     6e2:	99 27       	eor	r25, r25
     6e4:	87 fd       	sbrc	r24, 7
     6e6:	90 95       	com	r25
     6e8:	1c 97       	sbiw	r26, 0x0c	; 12
     6ea:	fd 01       	movw	r30, r26
     6ec:	e8 0f       	add	r30, r24
     6ee:	f9 1f       	adc	r31, r25
     6f0:	f0 97       	sbiw	r30, 0x30	; 48
     6f2:	80 81       	ld	r24, Z
     6f4:	8e 7f       	andi	r24, 0xFE	; 254
     6f6:	fa 01       	movw	r30, r20
     6f8:	80 83       	st	Z, r24
    display[6] = nr[ set_temp_buf[3] - 0x30 ];
     6fa:	f9 01       	movw	r30, r18
     6fc:	80 81       	ld	r24, Z
     6fe:	99 27       	eor	r25, r25
     700:	87 fd       	sbrc	r24, 7
     702:	90 95       	com	r25
     704:	a8 0f       	add	r26, r24
     706:	b9 1f       	adc	r27, r25
     708:	d0 97       	sbiw	r26, 0x30	; 48
     70a:	8c 91       	ld	r24, X
     70c:	fb 01       	movw	r30, r22
     70e:	82 83       	std	Z+2, r24	; 0x02
    display[7] = 0xFF;
     710:	8f ef       	ldi	r24, 0xFF	; 255
     712:	83 83       	std	Z+3, r24	; 0x03
     714:	56 c0       	rjmp	.+172    	; 0x7c2 <temp_to_buffer+0x158>
  }
  else if(conv < 1000)
     716:	08 5e       	subi	r16, 0xE8	; 232
     718:	13 40       	sbci	r17, 0x03	; 3
     71a:	2c f5       	brge	.+74     	; 0x766 <temp_to_buffer+0xfc>
  {
    display[4] = 0xFF;
     71c:	6c e3       	ldi	r22, 0x3C	; 60
     71e:	71 e0       	ldi	r23, 0x01	; 1
     720:	1f ef       	ldi	r17, 0xFF	; 255
     722:	fb 01       	movw	r30, r22
     724:	11 93       	st	Z+, r17
     726:	af 01       	movw	r20, r30
    display[5] = nr[ set_temp_buf[2] - 0x30 ] & 0xFE;
     728:	2f e1       	ldi	r18, 0x1F	; 31
     72a:	31 e0       	ldi	r19, 0x01	; 1
     72c:	f9 01       	movw	r30, r18
     72e:	81 91       	ld	r24, Z+
     730:	9f 01       	movw	r18, r30
     732:	99 27       	eor	r25, r25
     734:	87 fd       	sbrc	r24, 7
     736:	90 95       	com	r25
     738:	a7 e2       	ldi	r26, 0x27	; 39
     73a:	b1 e0       	ldi	r27, 0x01	; 1
     73c:	fd 01       	movw	r30, r26
     73e:	e8 0f       	add	r30, r24
     740:	f9 1f       	adc	r31, r25
     742:	f0 97       	sbiw	r30, 0x30	; 48
     744:	80 81       	ld	r24, Z
     746:	8e 7f       	andi	r24, 0xFE	; 254
     748:	fa 01       	movw	r30, r20
     74a:	80 83       	st	Z, r24
    display[6] = nr[ set_temp_buf[3] - 0x30 ];
     74c:	f9 01       	movw	r30, r18
     74e:	80 81       	ld	r24, Z
     750:	99 27       	eor	r25, r25
     752:	87 fd       	sbrc	r24, 7
     754:	90 95       	com	r25
     756:	a8 0f       	add	r26, r24
     758:	b9 1f       	adc	r27, r25
     75a:	d0 97       	sbiw	r26, 0x30	; 48
     75c:	8c 91       	ld	r24, X
     75e:	fb 01       	movw	r30, r22
     760:	82 83       	std	Z+2, r24	; 0x02
    display[7] = 0xFF;
     762:	13 83       	std	Z+3, r17	; 0x03
     764:	2e c0       	rjmp	.+92     	; 0x7c2 <temp_to_buffer+0x158>
  }
  else// if(conv < 100)
  {
    display[4] = nr[ set_temp_buf[1] - 0x30 ];
     766:	6c e3       	ldi	r22, 0x3C	; 60
     768:	71 e0       	ldi	r23, 0x01	; 1
     76a:	0e e1       	ldi	r16, 0x1E	; 30
     76c:	11 e0       	ldi	r17, 0x01	; 1
     76e:	f8 01       	movw	r30, r16
     770:	81 91       	ld	r24, Z+
     772:	af 01       	movw	r20, r30
     774:	99 27       	eor	r25, r25
     776:	87 fd       	sbrc	r24, 7
     778:	90 95       	com	r25
     77a:	a7 e2       	ldi	r26, 0x27	; 39
     77c:	b1 e0       	ldi	r27, 0x01	; 1
     77e:	fd 01       	movw	r30, r26
     780:	e8 0f       	add	r30, r24
     782:	f9 1f       	adc	r31, r25
     784:	f0 97       	sbiw	r30, 0x30	; 48
     786:	80 81       	ld	r24, Z
     788:	fb 01       	movw	r30, r22
     78a:	81 93       	st	Z+, r24
     78c:	9f 01       	movw	r18, r30
    display[5] = nr[ set_temp_buf[2] - 0x30 ] & 0xFE;
     78e:	fa 01       	movw	r30, r20
     790:	80 81       	ld	r24, Z
     792:	99 27       	eor	r25, r25
     794:	87 fd       	sbrc	r24, 7
     796:	90 95       	com	r25
     798:	fd 01       	movw	r30, r26
     79a:	e8 0f       	add	r30, r24
     79c:	f9 1f       	adc	r31, r25
     79e:	f0 97       	sbiw	r30, 0x30	; 48
     7a0:	80 81       	ld	r24, Z
     7a2:	8e 7f       	andi	r24, 0xFE	; 254
     7a4:	f9 01       	movw	r30, r18
     7a6:	80 83       	st	Z, r24
    display[6] = nr[ set_temp_buf[3] - 0x30 ];
     7a8:	f8 01       	movw	r30, r16
     7aa:	82 81       	ldd	r24, Z+2	; 0x02
     7ac:	99 27       	eor	r25, r25
     7ae:	87 fd       	sbrc	r24, 7
     7b0:	90 95       	com	r25
     7b2:	a8 0f       	add	r26, r24
     7b4:	b9 1f       	adc	r27, r25
     7b6:	d0 97       	sbiw	r26, 0x30	; 48
     7b8:	8c 91       	ld	r24, X
     7ba:	fb 01       	movw	r30, r22
     7bc:	82 83       	std	Z+2, r24	; 0x02
    display[7] = 0xFF;
     7be:	8f ef       	ldi	r24, 0xFF	; 255
     7c0:	83 83       	std	Z+3, r24	; 0x03
  }
}
     7c2:	1f 91       	pop	r17
     7c4:	0f 91       	pop	r16
     7c6:	ff 90       	pop	r15
     7c8:	ef 90       	pop	r14
     7ca:	08 95       	ret

000007cc <__vector_7>:
}

// Keyboard polling

ISR(TIMER2_COMPA_vect)
{
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
     7d6:	2f 93       	push	r18
     7d8:	3f 93       	push	r19
     7da:	4f 93       	push	r20
     7dc:	5f 93       	push	r21
     7de:	6f 93       	push	r22
     7e0:	7f 93       	push	r23
     7e2:	8f 93       	push	r24
     7e4:	9f 93       	push	r25
     7e6:	af 93       	push	r26
     7e8:	bf 93       	push	r27
     7ea:	ef 93       	push	r30
     7ec:	ff 93       	push	r31
  TCNT2 = 0;
     7ee:	10 92 b2 00 	sts	0x00B2, r1
  i2++;
     7f2:	80 91 5b 02 	lds	r24, 0x025B
     7f6:	8f 5f       	subi	r24, 0xFF	; 255
     7f8:	80 93 5b 02 	sts	0x025B, r24
  if( i2 == count2_1 )
     7fc:	90 91 48 01 	lds	r25, 0x0148
     800:	89 17       	cp	r24, r25
     802:	09 f0       	breq	.+2      	; 0x806 <__vector_7+0x3a>
     804:	62 c0       	rjmp	.+196    	; 0x8ca <__vector_7+0xfe>
  {
    uint8_t keypad = PINB>>6;
     806:	83 b1       	in	r24, 0x03	; 3
     808:	28 2f       	mov	r18, r24
     80a:	22 95       	swap	r18
     80c:	26 95       	lsr	r18
     80e:	26 95       	lsr	r18
     810:	23 70       	andi	r18, 0x03	; 3
    i2=0;
     812:	10 92 5b 02 	sts	0x025B, r1
    if( keypad != 3 ) // key pressed
     816:	23 30       	cpi	r18, 0x03	; 3
     818:	09 f4       	brne	.+2      	; 0x81c <__vector_7+0x50>
     81a:	3d c0       	rjmp	.+122    	; 0x896 <__vector_7+0xca>
    {
      mode = MODE_SET;
     81c:	10 92 40 01 	sts	0x0140, r1
      blink_mode = BLINK_MODE_SET;
     820:	83 e2       	ldi	r24, 0x23	; 35
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	90 93 58 02 	sts	0x0258, r25
     828:	80 93 57 02 	sts	0x0257, r24
      wait_counter = KEY_LOOP_WAIT; // the nr of loops to stay in set mode
     82c:	8f e0       	ldi	r24, 0x0F	; 15
     82e:	80 93 5a 02 	sts	0x025A, r24
      count2_1 = KEY_LOOP_LONG;  // slow sown the polling
     832:	84 e1       	ldi	r24, 0x14	; 20
     834:	80 93 48 01 	sts	0x0148, r24
      switch( keypad )
     838:	21 30       	cpi	r18, 0x01	; 1
     83a:	a9 f0       	breq	.+42     	; 0x866 <__vector_7+0x9a>
     83c:	22 30       	cpi	r18, 0x02	; 2
     83e:	29 f5       	brne	.+74     	; 0x88a <__vector_7+0xbe>
      {
        case 0b10:  // decrease temp.
          set_temp -= TEMP_STEP;
     840:	80 91 23 01 	lds	r24, 0x0123
     844:	90 91 24 01 	lds	r25, 0x0124
     848:	08 97       	sbiw	r24, 0x08	; 8
     84a:	90 93 24 01 	sts	0x0124, r25
     84e:	80 93 23 01 	sts	0x0123, r24
          if( set_temp < TEMP_MIN )
     852:	88 56       	subi	r24, 0x68	; 104
     854:	9f 4f       	sbci	r25, 0xFF	; 255
     856:	cc f4       	brge	.+50     	; 0x88a <__vector_7+0xbe>
            set_temp = TEMP_MIN;
     858:	88 e6       	ldi	r24, 0x68	; 104
     85a:	9f ef       	ldi	r25, 0xFF	; 255
     85c:	90 93 24 01 	sts	0x0124, r25
     860:	80 93 23 01 	sts	0x0123, r24
     864:	12 c0       	rjmp	.+36     	; 0x88a <__vector_7+0xbe>
          break;

        case 0b01:  // increase temp.
          set_temp += TEMP_STEP;
     866:	80 91 23 01 	lds	r24, 0x0123
     86a:	90 91 24 01 	lds	r25, 0x0124
     86e:	08 96       	adiw	r24, 0x08	; 8
     870:	90 93 24 01 	sts	0x0124, r25
     874:	80 93 23 01 	sts	0x0123, r24
          if( set_temp > TEMP_MAX )
     878:	89 53       	subi	r24, 0x39	; 57
     87a:	96 40       	sbci	r25, 0x06	; 6
     87c:	34 f0       	brlt	.+12     	; 0x88a <__vector_7+0xbe>
            set_temp = TEMP_MAX;
     87e:	88 e3       	ldi	r24, 0x38	; 56
     880:	96 e0       	ldi	r25, 0x06	; 6
     882:	90 93 24 01 	sts	0x0124, r25
     886:	80 93 23 01 	sts	0x0123, r24
          break;

        default:
          break;
      }
      temp_to_buffer(set_temp);
     88a:	80 91 23 01 	lds	r24, 0x0123
     88e:	90 91 24 01 	lds	r25, 0x0124
     892:	eb de       	rcall	.-554    	; 0x66a <temp_to_buffer>
     894:	1a c0       	rjmp	.+52     	; 0x8ca <__vector_7+0xfe>
    }
    else if( pause == 0 ) // key released
     896:	80 91 55 02 	lds	r24, 0x0255
     89a:	88 23       	and	r24, r24
     89c:	99 f4       	brne	.+38     	; 0x8c4 <__vector_7+0xf8>
    {
      count2_1 = KEY_LOOP_SHORT; // speed up polling
     89e:	8a e0       	ldi	r24, 0x0A	; 10
     8a0:	80 93 48 01 	sts	0x0148, r24

      if( wait_counter > 0 )
     8a4:	80 91 5a 02 	lds	r24, 0x025A
     8a8:	88 23       	and	r24, r24
     8aa:	21 f0       	breq	.+8      	; 0x8b4 <__vector_7+0xe8>
        wait_counter--;
     8ac:	81 50       	subi	r24, 0x01	; 1
     8ae:	80 93 5a 02 	sts	0x025A, r24
     8b2:	0b c0       	rjmp	.+22     	; 0x8ca <__vector_7+0xfe>
      else
      {
        mode = MODE_DISPLAY;
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	80 93 40 01 	sts	0x0140, r24
        blink_mode = BLINK_MODE_NORMAL;
     8ba:	10 92 58 02 	sts	0x0258, r1
     8be:	10 92 57 02 	sts	0x0257, r1
     8c2:	03 c0       	rjmp	.+6      	; 0x8ca <__vector_7+0xfe>
      }
    }
    else
    {
      mode = MODE_DISPLAY;
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	80 93 40 01 	sts	0x0140, r24
    }
  }
}
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	bf 91       	pop	r27
     8d0:	af 91       	pop	r26
     8d2:	9f 91       	pop	r25
     8d4:	8f 91       	pop	r24
     8d6:	7f 91       	pop	r23
     8d8:	6f 91       	pop	r22
     8da:	5f 91       	pop	r21
     8dc:	4f 91       	pop	r20
     8de:	3f 91       	pop	r19
     8e0:	2f 91       	pop	r18
     8e2:	0f 90       	pop	r0
     8e4:	0f be       	out	0x3f, r0	; 63
     8e6:	0f 90       	pop	r0
     8e8:	1f 90       	pop	r1
     8ea:	18 95       	reti

000008ec <main>:
  sei();  
}

int main()
{
  init();
     8ec:	cd dc       	rcall	.-1638   	; 0x288 <init>

  display[0] = nr[ CHAR_MINUS ];
     8ee:	80 91 33 01 	lds	r24, 0x0133
     8f2:	a8 e3       	ldi	r26, 0x38	; 56
     8f4:	b1 e0       	ldi	r27, 0x01	; 1
     8f6:	fd 01       	movw	r30, r26
     8f8:	81 93       	st	Z+, r24
  display[1] = nr[ CHAR_MINUS ];
     8fa:	80 83       	st	Z, r24
  display[2] = nr[ CHAR_MINUS ];
     8fc:	12 96       	adiw	r26, 0x02	; 2
     8fe:	8c 93       	st	X, r24
     900:	12 97       	sbiw	r26, 0x02	; 2
  display[3] = nr[ CHAR_MINUS ];
     902:	13 96       	adiw	r26, 0x03	; 3
     904:	8c 93       	st	X, r24

  therm_set_resolution(THERM_RES_10BIT);
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	1f dc       	rcall	.-1986   	; 0x148 <therm_set_resolution>
  temp_to_buffer(set_temp);
     90a:	80 91 23 01 	lds	r24, 0x0123
     90e:	90 91 24 01 	lds	r25, 0x0124
     912:	ab de       	rcall	.-682    	; 0x66a <temp_to_buffer>
     914:	ff cf       	rjmp	.-2      	; 0x914 <main+0x28>

00000916 <__mulsf3>:
     916:	a0 e2       	ldi	r26, 0x20	; 32
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	e0 e9       	ldi	r30, 0x90	; 144
     91c:	f4 e0       	ldi	r31, 0x04	; 4
     91e:	c6 c5       	rjmp	.+2956   	; 0x14ac <__prologue_saves__>
     920:	69 83       	std	Y+1, r22	; 0x01
     922:	7a 83       	std	Y+2, r23	; 0x02
     924:	8b 83       	std	Y+3, r24	; 0x03
     926:	9c 83       	std	Y+4, r25	; 0x04
     928:	2d 83       	std	Y+5, r18	; 0x05
     92a:	3e 83       	std	Y+6, r19	; 0x06
     92c:	4f 83       	std	Y+7, r20	; 0x07
     92e:	58 87       	std	Y+8, r21	; 0x08
     930:	ce 01       	movw	r24, r28
     932:	01 96       	adiw	r24, 0x01	; 1
     934:	be 01       	movw	r22, r28
     936:	67 5f       	subi	r22, 0xF7	; 247
     938:	7f 4f       	sbci	r23, 0xFF	; 255
     93a:	b1 d2       	rcall	.+1378   	; 0xe9e <__unpack_f>
     93c:	ce 01       	movw	r24, r28
     93e:	05 96       	adiw	r24, 0x05	; 5
     940:	be 01       	movw	r22, r28
     942:	6f 5e       	subi	r22, 0xEF	; 239
     944:	7f 4f       	sbci	r23, 0xFF	; 255
     946:	ab d2       	rcall	.+1366   	; 0xe9e <__unpack_f>
     948:	99 85       	ldd	r25, Y+9	; 0x09
     94a:	92 30       	cpi	r25, 0x02	; 2
     94c:	88 f0       	brcs	.+34     	; 0x970 <__mulsf3+0x5a>
     94e:	89 89       	ldd	r24, Y+17	; 0x11
     950:	82 30       	cpi	r24, 0x02	; 2
     952:	c8 f0       	brcs	.+50     	; 0x986 <__mulsf3+0x70>
     954:	94 30       	cpi	r25, 0x04	; 4
     956:	19 f4       	brne	.+6      	; 0x95e <__mulsf3+0x48>
     958:	82 30       	cpi	r24, 0x02	; 2
     95a:	51 f4       	brne	.+20     	; 0x970 <__mulsf3+0x5a>
     95c:	04 c0       	rjmp	.+8      	; 0x966 <__mulsf3+0x50>
     95e:	84 30       	cpi	r24, 0x04	; 4
     960:	29 f4       	brne	.+10     	; 0x96c <__mulsf3+0x56>
     962:	92 30       	cpi	r25, 0x02	; 2
     964:	81 f4       	brne	.+32     	; 0x986 <__mulsf3+0x70>
     966:	8a e4       	ldi	r24, 0x4A	; 74
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	c6 c0       	rjmp	.+396    	; 0xaf8 <__mulsf3+0x1e2>
     96c:	92 30       	cpi	r25, 0x02	; 2
     96e:	49 f4       	brne	.+18     	; 0x982 <__mulsf3+0x6c>
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	9a 85       	ldd	r25, Y+10	; 0x0a
     974:	8a 89       	ldd	r24, Y+18	; 0x12
     976:	98 13       	cpse	r25, r24
     978:	21 e0       	ldi	r18, 0x01	; 1
     97a:	2a 87       	std	Y+10, r18	; 0x0a
     97c:	ce 01       	movw	r24, r28
     97e:	09 96       	adiw	r24, 0x09	; 9
     980:	bb c0       	rjmp	.+374    	; 0xaf8 <__mulsf3+0x1e2>
     982:	82 30       	cpi	r24, 0x02	; 2
     984:	49 f4       	brne	.+18     	; 0x998 <__mulsf3+0x82>
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	9a 85       	ldd	r25, Y+10	; 0x0a
     98a:	8a 89       	ldd	r24, Y+18	; 0x12
     98c:	98 13       	cpse	r25, r24
     98e:	21 e0       	ldi	r18, 0x01	; 1
     990:	2a 8b       	std	Y+18, r18	; 0x12
     992:	ce 01       	movw	r24, r28
     994:	41 96       	adiw	r24, 0x11	; 17
     996:	b0 c0       	rjmp	.+352    	; 0xaf8 <__mulsf3+0x1e2>
     998:	2d 84       	ldd	r2, Y+13	; 0x0d
     99a:	3e 84       	ldd	r3, Y+14	; 0x0e
     99c:	4f 84       	ldd	r4, Y+15	; 0x0f
     99e:	58 88       	ldd	r5, Y+16	; 0x10
     9a0:	6d 88       	ldd	r6, Y+21	; 0x15
     9a2:	7e 88       	ldd	r7, Y+22	; 0x16
     9a4:	8f 88       	ldd	r8, Y+23	; 0x17
     9a6:	98 8c       	ldd	r9, Y+24	; 0x18
     9a8:	ee 24       	eor	r14, r14
     9aa:	ff 24       	eor	r15, r15
     9ac:	87 01       	movw	r16, r14
     9ae:	aa 24       	eor	r10, r10
     9b0:	bb 24       	eor	r11, r11
     9b2:	65 01       	movw	r12, r10
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	e0 e0       	ldi	r30, 0x00	; 0
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	c1 01       	movw	r24, r2
     9c2:	81 70       	andi	r24, 0x01	; 1
     9c4:	90 70       	andi	r25, 0x00	; 0
     9c6:	89 2b       	or	r24, r25
     9c8:	e9 f0       	breq	.+58     	; 0xa04 <__mulsf3+0xee>
     9ca:	e6 0c       	add	r14, r6
     9cc:	f7 1c       	adc	r15, r7
     9ce:	08 1d       	adc	r16, r8
     9d0:	19 1d       	adc	r17, r9
     9d2:	9a 01       	movw	r18, r20
     9d4:	ab 01       	movw	r20, r22
     9d6:	2a 0d       	add	r18, r10
     9d8:	3b 1d       	adc	r19, r11
     9da:	4c 1d       	adc	r20, r12
     9dc:	5d 1d       	adc	r21, r13
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	a0 e0       	ldi	r26, 0x00	; 0
     9e4:	b0 e0       	ldi	r27, 0x00	; 0
     9e6:	e6 14       	cp	r14, r6
     9e8:	f7 04       	cpc	r15, r7
     9ea:	08 05       	cpc	r16, r8
     9ec:	19 05       	cpc	r17, r9
     9ee:	20 f4       	brcc	.+8      	; 0x9f8 <__mulsf3+0xe2>
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	a0 e0       	ldi	r26, 0x00	; 0
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	ba 01       	movw	r22, r20
     9fa:	a9 01       	movw	r20, r18
     9fc:	48 0f       	add	r20, r24
     9fe:	59 1f       	adc	r21, r25
     a00:	6a 1f       	adc	r22, r26
     a02:	7b 1f       	adc	r23, r27
     a04:	aa 0c       	add	r10, r10
     a06:	bb 1c       	adc	r11, r11
     a08:	cc 1c       	adc	r12, r12
     a0a:	dd 1c       	adc	r13, r13
     a0c:	97 fe       	sbrs	r9, 7
     a0e:	08 c0       	rjmp	.+16     	; 0xa20 <__mulsf3+0x10a>
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	b0 e0       	ldi	r27, 0x00	; 0
     a18:	a8 2a       	or	r10, r24
     a1a:	b9 2a       	or	r11, r25
     a1c:	ca 2a       	or	r12, r26
     a1e:	db 2a       	or	r13, r27
     a20:	31 96       	adiw	r30, 0x01	; 1
     a22:	e0 32       	cpi	r30, 0x20	; 32
     a24:	f1 05       	cpc	r31, r1
     a26:	49 f0       	breq	.+18     	; 0xa3a <__mulsf3+0x124>
     a28:	66 0c       	add	r6, r6
     a2a:	77 1c       	adc	r7, r7
     a2c:	88 1c       	adc	r8, r8
     a2e:	99 1c       	adc	r9, r9
     a30:	56 94       	lsr	r5
     a32:	47 94       	ror	r4
     a34:	37 94       	ror	r3
     a36:	27 94       	ror	r2
     a38:	c3 cf       	rjmp	.-122    	; 0x9c0 <__mulsf3+0xaa>
     a3a:	fa 85       	ldd	r31, Y+10	; 0x0a
     a3c:	ea 89       	ldd	r30, Y+18	; 0x12
     a3e:	2b 89       	ldd	r18, Y+19	; 0x13
     a40:	3c 89       	ldd	r19, Y+20	; 0x14
     a42:	8b 85       	ldd	r24, Y+11	; 0x0b
     a44:	9c 85       	ldd	r25, Y+12	; 0x0c
     a46:	28 0f       	add	r18, r24
     a48:	39 1f       	adc	r19, r25
     a4a:	2e 5f       	subi	r18, 0xFE	; 254
     a4c:	3f 4f       	sbci	r19, 0xFF	; 255
     a4e:	17 c0       	rjmp	.+46     	; 0xa7e <__mulsf3+0x168>
     a50:	ca 01       	movw	r24, r20
     a52:	81 70       	andi	r24, 0x01	; 1
     a54:	90 70       	andi	r25, 0x00	; 0
     a56:	89 2b       	or	r24, r25
     a58:	61 f0       	breq	.+24     	; 0xa72 <__mulsf3+0x15c>
     a5a:	16 95       	lsr	r17
     a5c:	07 95       	ror	r16
     a5e:	f7 94       	ror	r15
     a60:	e7 94       	ror	r14
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	a0 e0       	ldi	r26, 0x00	; 0
     a68:	b0 e8       	ldi	r27, 0x80	; 128
     a6a:	e8 2a       	or	r14, r24
     a6c:	f9 2a       	or	r15, r25
     a6e:	0a 2b       	or	r16, r26
     a70:	1b 2b       	or	r17, r27
     a72:	76 95       	lsr	r23
     a74:	67 95       	ror	r22
     a76:	57 95       	ror	r21
     a78:	47 95       	ror	r20
     a7a:	2f 5f       	subi	r18, 0xFF	; 255
     a7c:	3f 4f       	sbci	r19, 0xFF	; 255
     a7e:	77 fd       	sbrc	r23, 7
     a80:	e7 cf       	rjmp	.-50     	; 0xa50 <__mulsf3+0x13a>
     a82:	0c c0       	rjmp	.+24     	; 0xa9c <__mulsf3+0x186>
     a84:	44 0f       	add	r20, r20
     a86:	55 1f       	adc	r21, r21
     a88:	66 1f       	adc	r22, r22
     a8a:	77 1f       	adc	r23, r23
     a8c:	17 fd       	sbrc	r17, 7
     a8e:	41 60       	ori	r20, 0x01	; 1
     a90:	ee 0c       	add	r14, r14
     a92:	ff 1c       	adc	r15, r15
     a94:	00 1f       	adc	r16, r16
     a96:	11 1f       	adc	r17, r17
     a98:	21 50       	subi	r18, 0x01	; 1
     a9a:	30 40       	sbci	r19, 0x00	; 0
     a9c:	40 30       	cpi	r20, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	59 07       	cpc	r21, r25
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	69 07       	cpc	r22, r25
     aa6:	90 e4       	ldi	r25, 0x40	; 64
     aa8:	79 07       	cpc	r23, r25
     aaa:	60 f3       	brcs	.-40     	; 0xa84 <__mulsf3+0x16e>
     aac:	2b 8f       	std	Y+27, r18	; 0x1b
     aae:	3c 8f       	std	Y+28, r19	; 0x1c
     ab0:	db 01       	movw	r26, r22
     ab2:	ca 01       	movw	r24, r20
     ab4:	8f 77       	andi	r24, 0x7F	; 127
     ab6:	90 70       	andi	r25, 0x00	; 0
     ab8:	a0 70       	andi	r26, 0x00	; 0
     aba:	b0 70       	andi	r27, 0x00	; 0
     abc:	80 34       	cpi	r24, 0x40	; 64
     abe:	91 05       	cpc	r25, r1
     ac0:	a1 05       	cpc	r26, r1
     ac2:	b1 05       	cpc	r27, r1
     ac4:	61 f4       	brne	.+24     	; 0xade <__mulsf3+0x1c8>
     ac6:	47 fd       	sbrc	r20, 7
     ac8:	0a c0       	rjmp	.+20     	; 0xade <__mulsf3+0x1c8>
     aca:	e1 14       	cp	r14, r1
     acc:	f1 04       	cpc	r15, r1
     ace:	01 05       	cpc	r16, r1
     ad0:	11 05       	cpc	r17, r1
     ad2:	29 f0       	breq	.+10     	; 0xade <__mulsf3+0x1c8>
     ad4:	40 5c       	subi	r20, 0xC0	; 192
     ad6:	5f 4f       	sbci	r21, 0xFF	; 255
     ad8:	6f 4f       	sbci	r22, 0xFF	; 255
     ada:	7f 4f       	sbci	r23, 0xFF	; 255
     adc:	40 78       	andi	r20, 0x80	; 128
     ade:	1a 8e       	std	Y+26, r1	; 0x1a
     ae0:	fe 17       	cp	r31, r30
     ae2:	11 f0       	breq	.+4      	; 0xae8 <__mulsf3+0x1d2>
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	8a 8f       	std	Y+26, r24	; 0x1a
     ae8:	4d 8f       	std	Y+29, r20	; 0x1d
     aea:	5e 8f       	std	Y+30, r21	; 0x1e
     aec:	6f 8f       	std	Y+31, r22	; 0x1f
     aee:	78 a3       	std	Y+32, r23	; 0x20
     af0:	83 e0       	ldi	r24, 0x03	; 3
     af2:	89 8f       	std	Y+25, r24	; 0x19
     af4:	ce 01       	movw	r24, r28
     af6:	49 96       	adiw	r24, 0x19	; 25
     af8:	fd d0       	rcall	.+506    	; 0xcf4 <__pack_f>
     afa:	a0 96       	adiw	r28, 0x20	; 32
     afc:	e2 e1       	ldi	r30, 0x12	; 18
     afe:	f2 c4       	rjmp	.+2532   	; 0x14e4 <__epilogue_restores__>

00000b00 <__floatsisf>:
     b00:	a8 e0       	ldi	r26, 0x08	; 8
     b02:	b0 e0       	ldi	r27, 0x00	; 0
     b04:	e5 e8       	ldi	r30, 0x85	; 133
     b06:	f5 e0       	ldi	r31, 0x05	; 5
     b08:	da c4       	rjmp	.+2484   	; 0x14be <__prologue_saves__+0x12>
     b0a:	9b 01       	movw	r18, r22
     b0c:	ac 01       	movw	r20, r24
     b0e:	83 e0       	ldi	r24, 0x03	; 3
     b10:	89 83       	std	Y+1, r24	; 0x01
     b12:	da 01       	movw	r26, r20
     b14:	c9 01       	movw	r24, r18
     b16:	88 27       	eor	r24, r24
     b18:	b7 fd       	sbrc	r27, 7
     b1a:	83 95       	inc	r24
     b1c:	99 27       	eor	r25, r25
     b1e:	aa 27       	eor	r26, r26
     b20:	bb 27       	eor	r27, r27
     b22:	b8 2e       	mov	r11, r24
     b24:	21 15       	cp	r18, r1
     b26:	31 05       	cpc	r19, r1
     b28:	41 05       	cpc	r20, r1
     b2a:	51 05       	cpc	r21, r1
     b2c:	19 f4       	brne	.+6      	; 0xb34 <__floatsisf+0x34>
     b2e:	82 e0       	ldi	r24, 0x02	; 2
     b30:	89 83       	std	Y+1, r24	; 0x01
     b32:	39 c0       	rjmp	.+114    	; 0xba6 <__floatsisf+0xa6>
     b34:	88 23       	and	r24, r24
     b36:	a9 f0       	breq	.+42     	; 0xb62 <__floatsisf+0x62>
     b38:	20 30       	cpi	r18, 0x00	; 0
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	38 07       	cpc	r19, r24
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	48 07       	cpc	r20, r24
     b42:	80 e8       	ldi	r24, 0x80	; 128
     b44:	58 07       	cpc	r21, r24
     b46:	29 f4       	brne	.+10     	; 0xb52 <__floatsisf+0x52>
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	9f ec       	ldi	r25, 0xCF	; 207
     b50:	2e c0       	rjmp	.+92     	; 0xbae <__floatsisf+0xae>
     b52:	ee 24       	eor	r14, r14
     b54:	ff 24       	eor	r15, r15
     b56:	87 01       	movw	r16, r14
     b58:	e2 1a       	sub	r14, r18
     b5a:	f3 0a       	sbc	r15, r19
     b5c:	04 0b       	sbc	r16, r20
     b5e:	15 0b       	sbc	r17, r21
     b60:	02 c0       	rjmp	.+4      	; 0xb66 <__floatsisf+0x66>
     b62:	79 01       	movw	r14, r18
     b64:	8a 01       	movw	r16, r20
     b66:	8e e1       	ldi	r24, 0x1E	; 30
     b68:	c8 2e       	mov	r12, r24
     b6a:	d1 2c       	mov	r13, r1
     b6c:	dc 82       	std	Y+4, r13	; 0x04
     b6e:	cb 82       	std	Y+3, r12	; 0x03
     b70:	ed 82       	std	Y+5, r14	; 0x05
     b72:	fe 82       	std	Y+6, r15	; 0x06
     b74:	0f 83       	std	Y+7, r16	; 0x07
     b76:	18 87       	std	Y+8, r17	; 0x08
     b78:	c8 01       	movw	r24, r16
     b7a:	b7 01       	movw	r22, r14
     b7c:	6c d0       	rcall	.+216    	; 0xc56 <__clzsi2>
     b7e:	01 97       	sbiw	r24, 0x01	; 1
     b80:	18 16       	cp	r1, r24
     b82:	19 06       	cpc	r1, r25
     b84:	84 f4       	brge	.+32     	; 0xba6 <__floatsisf+0xa6>
     b86:	08 2e       	mov	r0, r24
     b88:	04 c0       	rjmp	.+8      	; 0xb92 <__floatsisf+0x92>
     b8a:	ee 0c       	add	r14, r14
     b8c:	ff 1c       	adc	r15, r15
     b8e:	00 1f       	adc	r16, r16
     b90:	11 1f       	adc	r17, r17
     b92:	0a 94       	dec	r0
     b94:	d2 f7       	brpl	.-12     	; 0xb8a <__floatsisf+0x8a>
     b96:	ed 82       	std	Y+5, r14	; 0x05
     b98:	fe 82       	std	Y+6, r15	; 0x06
     b9a:	0f 83       	std	Y+7, r16	; 0x07
     b9c:	18 87       	std	Y+8, r17	; 0x08
     b9e:	c8 1a       	sub	r12, r24
     ba0:	d9 0a       	sbc	r13, r25
     ba2:	dc 82       	std	Y+4, r13	; 0x04
     ba4:	cb 82       	std	Y+3, r12	; 0x03
     ba6:	ba 82       	std	Y+2, r11	; 0x02
     ba8:	ce 01       	movw	r24, r28
     baa:	01 96       	adiw	r24, 0x01	; 1
     bac:	a3 d0       	rcall	.+326    	; 0xcf4 <__pack_f>
     bae:	28 96       	adiw	r28, 0x08	; 8
     bb0:	e9 e0       	ldi	r30, 0x09	; 9
     bb2:	a1 c4       	rjmp	.+2370   	; 0x14f6 <__epilogue_restores__+0x12>

00000bb4 <__fixsfsi>:
     bb4:	ac e0       	ldi	r26, 0x0C	; 12
     bb6:	b0 e0       	ldi	r27, 0x00	; 0
     bb8:	ef ed       	ldi	r30, 0xDF	; 223
     bba:	f5 e0       	ldi	r31, 0x05	; 5
     bbc:	87 c4       	rjmp	.+2318   	; 0x14cc <__prologue_saves__+0x20>
     bbe:	69 83       	std	Y+1, r22	; 0x01
     bc0:	7a 83       	std	Y+2, r23	; 0x02
     bc2:	8b 83       	std	Y+3, r24	; 0x03
     bc4:	9c 83       	std	Y+4, r25	; 0x04
     bc6:	ce 01       	movw	r24, r28
     bc8:	01 96       	adiw	r24, 0x01	; 1
     bca:	be 01       	movw	r22, r28
     bcc:	6b 5f       	subi	r22, 0xFB	; 251
     bce:	7f 4f       	sbci	r23, 0xFF	; 255
     bd0:	66 d1       	rcall	.+716    	; 0xe9e <__unpack_f>
     bd2:	8d 81       	ldd	r24, Y+5	; 0x05
     bd4:	82 30       	cpi	r24, 0x02	; 2
     bd6:	61 f1       	breq	.+88     	; 0xc30 <__fixsfsi+0x7c>
     bd8:	82 30       	cpi	r24, 0x02	; 2
     bda:	50 f1       	brcs	.+84     	; 0xc30 <__fixsfsi+0x7c>
     bdc:	84 30       	cpi	r24, 0x04	; 4
     bde:	21 f4       	brne	.+8      	; 0xbe8 <__fixsfsi+0x34>
     be0:	8e 81       	ldd	r24, Y+6	; 0x06
     be2:	88 23       	and	r24, r24
     be4:	51 f1       	breq	.+84     	; 0xc3a <__fixsfsi+0x86>
     be6:	2e c0       	rjmp	.+92     	; 0xc44 <__fixsfsi+0x90>
     be8:	2f 81       	ldd	r18, Y+7	; 0x07
     bea:	38 85       	ldd	r19, Y+8	; 0x08
     bec:	37 fd       	sbrc	r19, 7
     bee:	20 c0       	rjmp	.+64     	; 0xc30 <__fixsfsi+0x7c>
     bf0:	6e 81       	ldd	r22, Y+6	; 0x06
     bf2:	2f 31       	cpi	r18, 0x1F	; 31
     bf4:	31 05       	cpc	r19, r1
     bf6:	1c f0       	brlt	.+6      	; 0xbfe <__fixsfsi+0x4a>
     bf8:	66 23       	and	r22, r22
     bfa:	f9 f0       	breq	.+62     	; 0xc3a <__fixsfsi+0x86>
     bfc:	23 c0       	rjmp	.+70     	; 0xc44 <__fixsfsi+0x90>
     bfe:	8e e1       	ldi	r24, 0x1E	; 30
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	82 1b       	sub	r24, r18
     c04:	93 0b       	sbc	r25, r19
     c06:	29 85       	ldd	r18, Y+9	; 0x09
     c08:	3a 85       	ldd	r19, Y+10	; 0x0a
     c0a:	4b 85       	ldd	r20, Y+11	; 0x0b
     c0c:	5c 85       	ldd	r21, Y+12	; 0x0c
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <__fixsfsi+0x64>
     c10:	56 95       	lsr	r21
     c12:	47 95       	ror	r20
     c14:	37 95       	ror	r19
     c16:	27 95       	ror	r18
     c18:	8a 95       	dec	r24
     c1a:	d2 f7       	brpl	.-12     	; 0xc10 <__fixsfsi+0x5c>
     c1c:	66 23       	and	r22, r22
     c1e:	b1 f0       	breq	.+44     	; 0xc4c <__fixsfsi+0x98>
     c20:	50 95       	com	r21
     c22:	40 95       	com	r20
     c24:	30 95       	com	r19
     c26:	21 95       	neg	r18
     c28:	3f 4f       	sbci	r19, 0xFF	; 255
     c2a:	4f 4f       	sbci	r20, 0xFF	; 255
     c2c:	5f 4f       	sbci	r21, 0xFF	; 255
     c2e:	0e c0       	rjmp	.+28     	; 0xc4c <__fixsfsi+0x98>
     c30:	20 e0       	ldi	r18, 0x00	; 0
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	50 e0       	ldi	r21, 0x00	; 0
     c38:	09 c0       	rjmp	.+18     	; 0xc4c <__fixsfsi+0x98>
     c3a:	2f ef       	ldi	r18, 0xFF	; 255
     c3c:	3f ef       	ldi	r19, 0xFF	; 255
     c3e:	4f ef       	ldi	r20, 0xFF	; 255
     c40:	5f e7       	ldi	r21, 0x7F	; 127
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <__fixsfsi+0x98>
     c44:	20 e0       	ldi	r18, 0x00	; 0
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	40 e0       	ldi	r20, 0x00	; 0
     c4a:	50 e8       	ldi	r21, 0x80	; 128
     c4c:	b9 01       	movw	r22, r18
     c4e:	ca 01       	movw	r24, r20
     c50:	2c 96       	adiw	r28, 0x0c	; 12
     c52:	e2 e0       	ldi	r30, 0x02	; 2
     c54:	57 c4       	rjmp	.+2222   	; 0x1504 <__epilogue_restores__+0x20>

00000c56 <__clzsi2>:
     c56:	ef 92       	push	r14
     c58:	ff 92       	push	r15
     c5a:	0f 93       	push	r16
     c5c:	1f 93       	push	r17
     c5e:	7b 01       	movw	r14, r22
     c60:	8c 01       	movw	r16, r24
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	e8 16       	cp	r14, r24
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	f8 06       	cpc	r15, r24
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	08 07       	cpc	r16, r24
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	18 07       	cpc	r17, r24
     c72:	88 f4       	brcc	.+34     	; 0xc96 <__clzsi2+0x40>
     c74:	8f ef       	ldi	r24, 0xFF	; 255
     c76:	e8 16       	cp	r14, r24
     c78:	f1 04       	cpc	r15, r1
     c7a:	01 05       	cpc	r16, r1
     c7c:	11 05       	cpc	r17, r1
     c7e:	31 f0       	breq	.+12     	; 0xc8c <__clzsi2+0x36>
     c80:	28 f0       	brcs	.+10     	; 0xc8c <__clzsi2+0x36>
     c82:	88 e0       	ldi	r24, 0x08	; 8
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	a0 e0       	ldi	r26, 0x00	; 0
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	17 c0       	rjmp	.+46     	; 0xcba <__clzsi2+0x64>
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	a0 e0       	ldi	r26, 0x00	; 0
     c92:	b0 e0       	ldi	r27, 0x00	; 0
     c94:	12 c0       	rjmp	.+36     	; 0xcba <__clzsi2+0x64>
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	e8 16       	cp	r14, r24
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	f8 06       	cpc	r15, r24
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	08 07       	cpc	r16, r24
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	18 07       	cpc	r17, r24
     ca6:	28 f0       	brcs	.+10     	; 0xcb2 <__clzsi2+0x5c>
     ca8:	88 e1       	ldi	r24, 0x18	; 24
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	a0 e0       	ldi	r26, 0x00	; 0
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <__clzsi2+0x64>
     cb2:	80 e1       	ldi	r24, 0x10	; 16
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	a0 e0       	ldi	r26, 0x00	; 0
     cb8:	b0 e0       	ldi	r27, 0x00	; 0
     cba:	20 e2       	ldi	r18, 0x20	; 32
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	40 e0       	ldi	r20, 0x00	; 0
     cc0:	50 e0       	ldi	r21, 0x00	; 0
     cc2:	28 1b       	sub	r18, r24
     cc4:	39 0b       	sbc	r19, r25
     cc6:	4a 0b       	sbc	r20, r26
     cc8:	5b 0b       	sbc	r21, r27
     cca:	04 c0       	rjmp	.+8      	; 0xcd4 <__clzsi2+0x7e>
     ccc:	16 95       	lsr	r17
     cce:	07 95       	ror	r16
     cd0:	f7 94       	ror	r15
     cd2:	e7 94       	ror	r14
     cd4:	8a 95       	dec	r24
     cd6:	d2 f7       	brpl	.-12     	; 0xccc <__clzsi2+0x76>
     cd8:	f7 01       	movw	r30, r14
     cda:	ee 5a       	subi	r30, 0xAE	; 174
     cdc:	fe 4f       	sbci	r31, 0xFE	; 254
     cde:	80 81       	ld	r24, Z
     ce0:	28 1b       	sub	r18, r24
     ce2:	31 09       	sbc	r19, r1
     ce4:	41 09       	sbc	r20, r1
     ce6:	51 09       	sbc	r21, r1
     ce8:	c9 01       	movw	r24, r18
     cea:	1f 91       	pop	r17
     cec:	0f 91       	pop	r16
     cee:	ff 90       	pop	r15
     cf0:	ef 90       	pop	r14
     cf2:	08 95       	ret

00000cf4 <__pack_f>:
     cf4:	df 92       	push	r13
     cf6:	ef 92       	push	r14
     cf8:	ff 92       	push	r15
     cfa:	0f 93       	push	r16
     cfc:	1f 93       	push	r17
     cfe:	fc 01       	movw	r30, r24
     d00:	e4 80       	ldd	r14, Z+4	; 0x04
     d02:	f5 80       	ldd	r15, Z+5	; 0x05
     d04:	06 81       	ldd	r16, Z+6	; 0x06
     d06:	17 81       	ldd	r17, Z+7	; 0x07
     d08:	d1 80       	ldd	r13, Z+1	; 0x01
     d0a:	80 81       	ld	r24, Z
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	48 f4       	brcc	.+18     	; 0xd22 <__pack_f+0x2e>
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	a0 e1       	ldi	r26, 0x10	; 16
     d16:	b0 e0       	ldi	r27, 0x00	; 0
     d18:	e8 2a       	or	r14, r24
     d1a:	f9 2a       	or	r15, r25
     d1c:	0a 2b       	or	r16, r26
     d1e:	1b 2b       	or	r17, r27
     d20:	a5 c0       	rjmp	.+330    	; 0xe6c <__pack_f+0x178>
     d22:	84 30       	cpi	r24, 0x04	; 4
     d24:	09 f4       	brne	.+2      	; 0xd28 <__pack_f+0x34>
     d26:	9f c0       	rjmp	.+318    	; 0xe66 <__pack_f+0x172>
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	21 f4       	brne	.+8      	; 0xd34 <__pack_f+0x40>
     d2c:	ee 24       	eor	r14, r14
     d2e:	ff 24       	eor	r15, r15
     d30:	87 01       	movw	r16, r14
     d32:	05 c0       	rjmp	.+10     	; 0xd3e <__pack_f+0x4a>
     d34:	e1 14       	cp	r14, r1
     d36:	f1 04       	cpc	r15, r1
     d38:	01 05       	cpc	r16, r1
     d3a:	11 05       	cpc	r17, r1
     d3c:	19 f4       	brne	.+6      	; 0xd44 <__pack_f+0x50>
     d3e:	e0 e0       	ldi	r30, 0x00	; 0
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	96 c0       	rjmp	.+300    	; 0xe70 <__pack_f+0x17c>
     d44:	62 81       	ldd	r22, Z+2	; 0x02
     d46:	73 81       	ldd	r23, Z+3	; 0x03
     d48:	9f ef       	ldi	r25, 0xFF	; 255
     d4a:	62 38       	cpi	r22, 0x82	; 130
     d4c:	79 07       	cpc	r23, r25
     d4e:	0c f0       	brlt	.+2      	; 0xd52 <__pack_f+0x5e>
     d50:	5b c0       	rjmp	.+182    	; 0xe08 <__pack_f+0x114>
     d52:	22 e8       	ldi	r18, 0x82	; 130
     d54:	3f ef       	ldi	r19, 0xFF	; 255
     d56:	26 1b       	sub	r18, r22
     d58:	37 0b       	sbc	r19, r23
     d5a:	2a 31       	cpi	r18, 0x1A	; 26
     d5c:	31 05       	cpc	r19, r1
     d5e:	2c f0       	brlt	.+10     	; 0xd6a <__pack_f+0x76>
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	40 e0       	ldi	r20, 0x00	; 0
     d66:	50 e0       	ldi	r21, 0x00	; 0
     d68:	2a c0       	rjmp	.+84     	; 0xdbe <__pack_f+0xca>
     d6a:	b8 01       	movw	r22, r16
     d6c:	a7 01       	movw	r20, r14
     d6e:	02 2e       	mov	r0, r18
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <__pack_f+0x86>
     d72:	76 95       	lsr	r23
     d74:	67 95       	ror	r22
     d76:	57 95       	ror	r21
     d78:	47 95       	ror	r20
     d7a:	0a 94       	dec	r0
     d7c:	d2 f7       	brpl	.-12     	; 0xd72 <__pack_f+0x7e>
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	a0 e0       	ldi	r26, 0x00	; 0
     d84:	b0 e0       	ldi	r27, 0x00	; 0
     d86:	04 c0       	rjmp	.+8      	; 0xd90 <__pack_f+0x9c>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	aa 1f       	adc	r26, r26
     d8e:	bb 1f       	adc	r27, r27
     d90:	2a 95       	dec	r18
     d92:	d2 f7       	brpl	.-12     	; 0xd88 <__pack_f+0x94>
     d94:	01 97       	sbiw	r24, 0x01	; 1
     d96:	a1 09       	sbc	r26, r1
     d98:	b1 09       	sbc	r27, r1
     d9a:	8e 21       	and	r24, r14
     d9c:	9f 21       	and	r25, r15
     d9e:	a0 23       	and	r26, r16
     da0:	b1 23       	and	r27, r17
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	a1 05       	cpc	r26, r1
     da6:	b1 05       	cpc	r27, r1
     da8:	21 f0       	breq	.+8      	; 0xdb2 <__pack_f+0xbe>
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	a0 e0       	ldi	r26, 0x00	; 0
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	9a 01       	movw	r18, r20
     db4:	ab 01       	movw	r20, r22
     db6:	28 2b       	or	r18, r24
     db8:	39 2b       	or	r19, r25
     dba:	4a 2b       	or	r20, r26
     dbc:	5b 2b       	or	r21, r27
     dbe:	da 01       	movw	r26, r20
     dc0:	c9 01       	movw	r24, r18
     dc2:	8f 77       	andi	r24, 0x7F	; 127
     dc4:	90 70       	andi	r25, 0x00	; 0
     dc6:	a0 70       	andi	r26, 0x00	; 0
     dc8:	b0 70       	andi	r27, 0x00	; 0
     dca:	80 34       	cpi	r24, 0x40	; 64
     dcc:	91 05       	cpc	r25, r1
     dce:	a1 05       	cpc	r26, r1
     dd0:	b1 05       	cpc	r27, r1
     dd2:	39 f4       	brne	.+14     	; 0xde2 <__pack_f+0xee>
     dd4:	27 ff       	sbrs	r18, 7
     dd6:	09 c0       	rjmp	.+18     	; 0xdea <__pack_f+0xf6>
     dd8:	20 5c       	subi	r18, 0xC0	; 192
     dda:	3f 4f       	sbci	r19, 0xFF	; 255
     ddc:	4f 4f       	sbci	r20, 0xFF	; 255
     dde:	5f 4f       	sbci	r21, 0xFF	; 255
     de0:	04 c0       	rjmp	.+8      	; 0xdea <__pack_f+0xf6>
     de2:	21 5c       	subi	r18, 0xC1	; 193
     de4:	3f 4f       	sbci	r19, 0xFF	; 255
     de6:	4f 4f       	sbci	r20, 0xFF	; 255
     de8:	5f 4f       	sbci	r21, 0xFF	; 255
     dea:	e0 e0       	ldi	r30, 0x00	; 0
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	20 30       	cpi	r18, 0x00	; 0
     df0:	a0 e0       	ldi	r26, 0x00	; 0
     df2:	3a 07       	cpc	r19, r26
     df4:	a0 e0       	ldi	r26, 0x00	; 0
     df6:	4a 07       	cpc	r20, r26
     df8:	a0 e4       	ldi	r26, 0x40	; 64
     dfa:	5a 07       	cpc	r21, r26
     dfc:	10 f0       	brcs	.+4      	; 0xe02 <__pack_f+0x10e>
     dfe:	e1 e0       	ldi	r30, 0x01	; 1
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	79 01       	movw	r14, r18
     e04:	8a 01       	movw	r16, r20
     e06:	27 c0       	rjmp	.+78     	; 0xe56 <__pack_f+0x162>
     e08:	60 38       	cpi	r22, 0x80	; 128
     e0a:	71 05       	cpc	r23, r1
     e0c:	64 f5       	brge	.+88     	; 0xe66 <__pack_f+0x172>
     e0e:	fb 01       	movw	r30, r22
     e10:	e1 58       	subi	r30, 0x81	; 129
     e12:	ff 4f       	sbci	r31, 0xFF	; 255
     e14:	d8 01       	movw	r26, r16
     e16:	c7 01       	movw	r24, r14
     e18:	8f 77       	andi	r24, 0x7F	; 127
     e1a:	90 70       	andi	r25, 0x00	; 0
     e1c:	a0 70       	andi	r26, 0x00	; 0
     e1e:	b0 70       	andi	r27, 0x00	; 0
     e20:	80 34       	cpi	r24, 0x40	; 64
     e22:	91 05       	cpc	r25, r1
     e24:	a1 05       	cpc	r26, r1
     e26:	b1 05       	cpc	r27, r1
     e28:	39 f4       	brne	.+14     	; 0xe38 <__pack_f+0x144>
     e2a:	e7 fe       	sbrs	r14, 7
     e2c:	0d c0       	rjmp	.+26     	; 0xe48 <__pack_f+0x154>
     e2e:	80 e4       	ldi	r24, 0x40	; 64
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	a0 e0       	ldi	r26, 0x00	; 0
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	04 c0       	rjmp	.+8      	; 0xe40 <__pack_f+0x14c>
     e38:	8f e3       	ldi	r24, 0x3F	; 63
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	a0 e0       	ldi	r26, 0x00	; 0
     e3e:	b0 e0       	ldi	r27, 0x00	; 0
     e40:	e8 0e       	add	r14, r24
     e42:	f9 1e       	adc	r15, r25
     e44:	0a 1f       	adc	r16, r26
     e46:	1b 1f       	adc	r17, r27
     e48:	17 ff       	sbrs	r17, 7
     e4a:	05 c0       	rjmp	.+10     	; 0xe56 <__pack_f+0x162>
     e4c:	16 95       	lsr	r17
     e4e:	07 95       	ror	r16
     e50:	f7 94       	ror	r15
     e52:	e7 94       	ror	r14
     e54:	31 96       	adiw	r30, 0x01	; 1
     e56:	87 e0       	ldi	r24, 0x07	; 7
     e58:	16 95       	lsr	r17
     e5a:	07 95       	ror	r16
     e5c:	f7 94       	ror	r15
     e5e:	e7 94       	ror	r14
     e60:	8a 95       	dec	r24
     e62:	d1 f7       	brne	.-12     	; 0xe58 <__pack_f+0x164>
     e64:	05 c0       	rjmp	.+10     	; 0xe70 <__pack_f+0x17c>
     e66:	ee 24       	eor	r14, r14
     e68:	ff 24       	eor	r15, r15
     e6a:	87 01       	movw	r16, r14
     e6c:	ef ef       	ldi	r30, 0xFF	; 255
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	6e 2f       	mov	r22, r30
     e72:	67 95       	ror	r22
     e74:	66 27       	eor	r22, r22
     e76:	67 95       	ror	r22
     e78:	90 2f       	mov	r25, r16
     e7a:	9f 77       	andi	r25, 0x7F	; 127
     e7c:	d7 94       	ror	r13
     e7e:	dd 24       	eor	r13, r13
     e80:	d7 94       	ror	r13
     e82:	8e 2f       	mov	r24, r30
     e84:	86 95       	lsr	r24
     e86:	49 2f       	mov	r20, r25
     e88:	46 2b       	or	r20, r22
     e8a:	58 2f       	mov	r21, r24
     e8c:	5d 29       	or	r21, r13
     e8e:	b7 01       	movw	r22, r14
     e90:	ca 01       	movw	r24, r20
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	ff 90       	pop	r15
     e98:	ef 90       	pop	r14
     e9a:	df 90       	pop	r13
     e9c:	08 95       	ret

00000e9e <__unpack_f>:
     e9e:	fc 01       	movw	r30, r24
     ea0:	db 01       	movw	r26, r22
     ea2:	40 81       	ld	r20, Z
     ea4:	51 81       	ldd	r21, Z+1	; 0x01
     ea6:	22 81       	ldd	r18, Z+2	; 0x02
     ea8:	62 2f       	mov	r22, r18
     eaa:	6f 77       	andi	r22, 0x7F	; 127
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	22 1f       	adc	r18, r18
     eb0:	22 27       	eor	r18, r18
     eb2:	22 1f       	adc	r18, r18
     eb4:	93 81       	ldd	r25, Z+3	; 0x03
     eb6:	89 2f       	mov	r24, r25
     eb8:	88 0f       	add	r24, r24
     eba:	82 2b       	or	r24, r18
     ebc:	28 2f       	mov	r18, r24
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	99 1f       	adc	r25, r25
     ec2:	99 27       	eor	r25, r25
     ec4:	99 1f       	adc	r25, r25
     ec6:	11 96       	adiw	r26, 0x01	; 1
     ec8:	9c 93       	st	X, r25
     eca:	11 97       	sbiw	r26, 0x01	; 1
     ecc:	21 15       	cp	r18, r1
     ece:	31 05       	cpc	r19, r1
     ed0:	a9 f5       	brne	.+106    	; 0xf3c <__unpack_f+0x9e>
     ed2:	41 15       	cp	r20, r1
     ed4:	51 05       	cpc	r21, r1
     ed6:	61 05       	cpc	r22, r1
     ed8:	71 05       	cpc	r23, r1
     eda:	11 f4       	brne	.+4      	; 0xee0 <__unpack_f+0x42>
     edc:	82 e0       	ldi	r24, 0x02	; 2
     ede:	37 c0       	rjmp	.+110    	; 0xf4e <__unpack_f+0xb0>
     ee0:	82 e8       	ldi	r24, 0x82	; 130
     ee2:	9f ef       	ldi	r25, 0xFF	; 255
     ee4:	13 96       	adiw	r26, 0x03	; 3
     ee6:	9c 93       	st	X, r25
     ee8:	8e 93       	st	-X, r24
     eea:	12 97       	sbiw	r26, 0x02	; 2
     eec:	9a 01       	movw	r18, r20
     eee:	ab 01       	movw	r20, r22
     ef0:	67 e0       	ldi	r22, 0x07	; 7
     ef2:	22 0f       	add	r18, r18
     ef4:	33 1f       	adc	r19, r19
     ef6:	44 1f       	adc	r20, r20
     ef8:	55 1f       	adc	r21, r21
     efa:	6a 95       	dec	r22
     efc:	d1 f7       	brne	.-12     	; 0xef2 <__unpack_f+0x54>
     efe:	83 e0       	ldi	r24, 0x03	; 3
     f00:	8c 93       	st	X, r24
     f02:	0d c0       	rjmp	.+26     	; 0xf1e <__unpack_f+0x80>
     f04:	22 0f       	add	r18, r18
     f06:	33 1f       	adc	r19, r19
     f08:	44 1f       	adc	r20, r20
     f0a:	55 1f       	adc	r21, r21
     f0c:	12 96       	adiw	r26, 0x02	; 2
     f0e:	8d 91       	ld	r24, X+
     f10:	9c 91       	ld	r25, X
     f12:	13 97       	sbiw	r26, 0x03	; 3
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	13 96       	adiw	r26, 0x03	; 3
     f18:	9c 93       	st	X, r25
     f1a:	8e 93       	st	-X, r24
     f1c:	12 97       	sbiw	r26, 0x02	; 2
     f1e:	20 30       	cpi	r18, 0x00	; 0
     f20:	80 e0       	ldi	r24, 0x00	; 0
     f22:	38 07       	cpc	r19, r24
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	48 07       	cpc	r20, r24
     f28:	80 e4       	ldi	r24, 0x40	; 64
     f2a:	58 07       	cpc	r21, r24
     f2c:	58 f3       	brcs	.-42     	; 0xf04 <__unpack_f+0x66>
     f2e:	14 96       	adiw	r26, 0x04	; 4
     f30:	2d 93       	st	X+, r18
     f32:	3d 93       	st	X+, r19
     f34:	4d 93       	st	X+, r20
     f36:	5c 93       	st	X, r21
     f38:	17 97       	sbiw	r26, 0x07	; 7
     f3a:	08 95       	ret
     f3c:	2f 3f       	cpi	r18, 0xFF	; 255
     f3e:	31 05       	cpc	r19, r1
     f40:	79 f4       	brne	.+30     	; 0xf60 <__unpack_f+0xc2>
     f42:	41 15       	cp	r20, r1
     f44:	51 05       	cpc	r21, r1
     f46:	61 05       	cpc	r22, r1
     f48:	71 05       	cpc	r23, r1
     f4a:	19 f4       	brne	.+6      	; 0xf52 <__unpack_f+0xb4>
     f4c:	84 e0       	ldi	r24, 0x04	; 4
     f4e:	8c 93       	st	X, r24
     f50:	08 95       	ret
     f52:	64 ff       	sbrs	r22, 4
     f54:	03 c0       	rjmp	.+6      	; 0xf5c <__unpack_f+0xbe>
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	8c 93       	st	X, r24
     f5a:	12 c0       	rjmp	.+36     	; 0xf80 <__unpack_f+0xe2>
     f5c:	1c 92       	st	X, r1
     f5e:	10 c0       	rjmp	.+32     	; 0xf80 <__unpack_f+0xe2>
     f60:	2f 57       	subi	r18, 0x7F	; 127
     f62:	30 40       	sbci	r19, 0x00	; 0
     f64:	13 96       	adiw	r26, 0x03	; 3
     f66:	3c 93       	st	X, r19
     f68:	2e 93       	st	-X, r18
     f6a:	12 97       	sbiw	r26, 0x02	; 2
     f6c:	83 e0       	ldi	r24, 0x03	; 3
     f6e:	8c 93       	st	X, r24
     f70:	87 e0       	ldi	r24, 0x07	; 7
     f72:	44 0f       	add	r20, r20
     f74:	55 1f       	adc	r21, r21
     f76:	66 1f       	adc	r22, r22
     f78:	77 1f       	adc	r23, r23
     f7a:	8a 95       	dec	r24
     f7c:	d1 f7       	brne	.-12     	; 0xf72 <__unpack_f+0xd4>
     f7e:	70 64       	ori	r23, 0x40	; 64
     f80:	14 96       	adiw	r26, 0x04	; 4
     f82:	4d 93       	st	X+, r20
     f84:	5d 93       	st	X+, r21
     f86:	6d 93       	st	X+, r22
     f88:	7c 93       	st	X, r23
     f8a:	17 97       	sbiw	r26, 0x07	; 7
     f8c:	08 95       	ret

00000f8e <sprintf>:
     f8e:	ae e0       	ldi	r26, 0x0E	; 14
     f90:	b0 e0       	ldi	r27, 0x00	; 0
     f92:	ec ec       	ldi	r30, 0xCC	; 204
     f94:	f7 e0       	ldi	r31, 0x07	; 7
     f96:	98 c2       	rjmp	.+1328   	; 0x14c8 <__prologue_saves__+0x1c>
     f98:	0d 89       	ldd	r16, Y+21	; 0x15
     f9a:	1e 89       	ldd	r17, Y+22	; 0x16
     f9c:	86 e0       	ldi	r24, 0x06	; 6
     f9e:	8c 83       	std	Y+4, r24	; 0x04
     fa0:	1a 83       	std	Y+2, r17	; 0x02
     fa2:	09 83       	std	Y+1, r16	; 0x01
     fa4:	8f ef       	ldi	r24, 0xFF	; 255
     fa6:	9f e7       	ldi	r25, 0x7F	; 127
     fa8:	9e 83       	std	Y+6, r25	; 0x06
     faa:	8d 83       	std	Y+5, r24	; 0x05
     fac:	9e 01       	movw	r18, r28
     fae:	27 5e       	subi	r18, 0xE7	; 231
     fb0:	3f 4f       	sbci	r19, 0xFF	; 255
     fb2:	ce 01       	movw	r24, r28
     fb4:	01 96       	adiw	r24, 0x01	; 1
     fb6:	6f 89       	ldd	r22, Y+23	; 0x17
     fb8:	78 8d       	ldd	r23, Y+24	; 0x18
     fba:	a9 01       	movw	r20, r18
     fbc:	09 d0       	rcall	.+18     	; 0xfd0 <vfprintf>
     fbe:	2f 81       	ldd	r18, Y+7	; 0x07
     fc0:	38 85       	ldd	r19, Y+8	; 0x08
     fc2:	02 0f       	add	r16, r18
     fc4:	13 1f       	adc	r17, r19
     fc6:	f8 01       	movw	r30, r16
     fc8:	10 82       	st	Z, r1
     fca:	2e 96       	adiw	r28, 0x0e	; 14
     fcc:	e4 e0       	ldi	r30, 0x04	; 4
     fce:	98 c2       	rjmp	.+1328   	; 0x1500 <__epilogue_restores__+0x1c>

00000fd0 <vfprintf>:
     fd0:	ab e0       	ldi	r26, 0x0B	; 11
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	ed ee       	ldi	r30, 0xED	; 237
     fd6:	f7 e0       	ldi	r31, 0x07	; 7
     fd8:	69 c2       	rjmp	.+1234   	; 0x14ac <__prologue_saves__>
     fda:	3c 01       	movw	r6, r24
     fdc:	2b 01       	movw	r4, r22
     fde:	5a 01       	movw	r10, r20
     fe0:	fc 01       	movw	r30, r24
     fe2:	17 82       	std	Z+7, r1	; 0x07
     fe4:	16 82       	std	Z+6, r1	; 0x06
     fe6:	83 81       	ldd	r24, Z+3	; 0x03
     fe8:	81 fd       	sbrc	r24, 1
     fea:	03 c0       	rjmp	.+6      	; 0xff2 <vfprintf+0x22>
     fec:	6f ef       	ldi	r22, 0xFF	; 255
     fee:	7f ef       	ldi	r23, 0xFF	; 255
     ff0:	b9 c1       	rjmp	.+882    	; 0x1364 <vfprintf+0x394>
     ff2:	9a e0       	ldi	r25, 0x0A	; 10
     ff4:	89 2e       	mov	r8, r25
     ff6:	1e 01       	movw	r2, r28
     ff8:	08 94       	sec
     ffa:	21 1c       	adc	r2, r1
     ffc:	31 1c       	adc	r3, r1
     ffe:	f3 01       	movw	r30, r6
    1000:	23 81       	ldd	r18, Z+3	; 0x03
    1002:	f2 01       	movw	r30, r4
    1004:	23 fd       	sbrc	r18, 3
    1006:	85 91       	lpm	r24, Z+
    1008:	23 ff       	sbrs	r18, 3
    100a:	81 91       	ld	r24, Z+
    100c:	2f 01       	movw	r4, r30
    100e:	88 23       	and	r24, r24
    1010:	09 f4       	brne	.+2      	; 0x1014 <vfprintf+0x44>
    1012:	a5 c1       	rjmp	.+842    	; 0x135e <vfprintf+0x38e>
    1014:	85 32       	cpi	r24, 0x25	; 37
    1016:	39 f4       	brne	.+14     	; 0x1026 <vfprintf+0x56>
    1018:	23 fd       	sbrc	r18, 3
    101a:	85 91       	lpm	r24, Z+
    101c:	23 ff       	sbrs	r18, 3
    101e:	81 91       	ld	r24, Z+
    1020:	2f 01       	movw	r4, r30
    1022:	85 32       	cpi	r24, 0x25	; 37
    1024:	21 f4       	brne	.+8      	; 0x102e <vfprintf+0x5e>
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	b3 01       	movw	r22, r6
    102a:	b6 d1       	rcall	.+876    	; 0x1398 <fputc>
    102c:	e8 cf       	rjmp	.-48     	; 0xffe <vfprintf+0x2e>
    102e:	98 2f       	mov	r25, r24
    1030:	ff 24       	eor	r15, r15
    1032:	ee 24       	eor	r14, r14
    1034:	99 24       	eor	r9, r9
    1036:	ff e1       	ldi	r31, 0x1F	; 31
    1038:	ff 15       	cp	r31, r15
    103a:	d0 f0       	brcs	.+52     	; 0x1070 <vfprintf+0xa0>
    103c:	9b 32       	cpi	r25, 0x2B	; 43
    103e:	69 f0       	breq	.+26     	; 0x105a <vfprintf+0x8a>
    1040:	9c 32       	cpi	r25, 0x2C	; 44
    1042:	28 f4       	brcc	.+10     	; 0x104e <vfprintf+0x7e>
    1044:	90 32       	cpi	r25, 0x20	; 32
    1046:	59 f0       	breq	.+22     	; 0x105e <vfprintf+0x8e>
    1048:	93 32       	cpi	r25, 0x23	; 35
    104a:	91 f4       	brne	.+36     	; 0x1070 <vfprintf+0xa0>
    104c:	0e c0       	rjmp	.+28     	; 0x106a <vfprintf+0x9a>
    104e:	9d 32       	cpi	r25, 0x2D	; 45
    1050:	49 f0       	breq	.+18     	; 0x1064 <vfprintf+0x94>
    1052:	90 33       	cpi	r25, 0x30	; 48
    1054:	69 f4       	brne	.+26     	; 0x1070 <vfprintf+0xa0>
    1056:	41 e0       	ldi	r20, 0x01	; 1
    1058:	24 c0       	rjmp	.+72     	; 0x10a2 <vfprintf+0xd2>
    105a:	52 e0       	ldi	r21, 0x02	; 2
    105c:	f5 2a       	or	r15, r21
    105e:	84 e0       	ldi	r24, 0x04	; 4
    1060:	f8 2a       	or	r15, r24
    1062:	28 c0       	rjmp	.+80     	; 0x10b4 <vfprintf+0xe4>
    1064:	98 e0       	ldi	r25, 0x08	; 8
    1066:	f9 2a       	or	r15, r25
    1068:	25 c0       	rjmp	.+74     	; 0x10b4 <vfprintf+0xe4>
    106a:	e0 e1       	ldi	r30, 0x10	; 16
    106c:	fe 2a       	or	r15, r30
    106e:	22 c0       	rjmp	.+68     	; 0x10b4 <vfprintf+0xe4>
    1070:	f7 fc       	sbrc	r15, 7
    1072:	29 c0       	rjmp	.+82     	; 0x10c6 <vfprintf+0xf6>
    1074:	89 2f       	mov	r24, r25
    1076:	80 53       	subi	r24, 0x30	; 48
    1078:	8a 30       	cpi	r24, 0x0A	; 10
    107a:	70 f4       	brcc	.+28     	; 0x1098 <vfprintf+0xc8>
    107c:	f6 fe       	sbrs	r15, 6
    107e:	05 c0       	rjmp	.+10     	; 0x108a <vfprintf+0xba>
    1080:	98 9c       	mul	r9, r8
    1082:	90 2c       	mov	r9, r0
    1084:	11 24       	eor	r1, r1
    1086:	98 0e       	add	r9, r24
    1088:	15 c0       	rjmp	.+42     	; 0x10b4 <vfprintf+0xe4>
    108a:	e8 9c       	mul	r14, r8
    108c:	e0 2c       	mov	r14, r0
    108e:	11 24       	eor	r1, r1
    1090:	e8 0e       	add	r14, r24
    1092:	f0 e2       	ldi	r31, 0x20	; 32
    1094:	ff 2a       	or	r15, r31
    1096:	0e c0       	rjmp	.+28     	; 0x10b4 <vfprintf+0xe4>
    1098:	9e 32       	cpi	r25, 0x2E	; 46
    109a:	29 f4       	brne	.+10     	; 0x10a6 <vfprintf+0xd6>
    109c:	f6 fc       	sbrc	r15, 6
    109e:	5f c1       	rjmp	.+702    	; 0x135e <vfprintf+0x38e>
    10a0:	40 e4       	ldi	r20, 0x40	; 64
    10a2:	f4 2a       	or	r15, r20
    10a4:	07 c0       	rjmp	.+14     	; 0x10b4 <vfprintf+0xe4>
    10a6:	9c 36       	cpi	r25, 0x6C	; 108
    10a8:	19 f4       	brne	.+6      	; 0x10b0 <vfprintf+0xe0>
    10aa:	50 e8       	ldi	r21, 0x80	; 128
    10ac:	f5 2a       	or	r15, r21
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <vfprintf+0xe4>
    10b0:	98 36       	cpi	r25, 0x68	; 104
    10b2:	49 f4       	brne	.+18     	; 0x10c6 <vfprintf+0xf6>
    10b4:	f2 01       	movw	r30, r4
    10b6:	23 fd       	sbrc	r18, 3
    10b8:	95 91       	lpm	r25, Z+
    10ba:	23 ff       	sbrs	r18, 3
    10bc:	91 91       	ld	r25, Z+
    10be:	2f 01       	movw	r4, r30
    10c0:	99 23       	and	r25, r25
    10c2:	09 f0       	breq	.+2      	; 0x10c6 <vfprintf+0xf6>
    10c4:	b8 cf       	rjmp	.-144    	; 0x1036 <vfprintf+0x66>
    10c6:	89 2f       	mov	r24, r25
    10c8:	85 54       	subi	r24, 0x45	; 69
    10ca:	83 30       	cpi	r24, 0x03	; 3
    10cc:	18 f0       	brcs	.+6      	; 0x10d4 <vfprintf+0x104>
    10ce:	80 52       	subi	r24, 0x20	; 32
    10d0:	83 30       	cpi	r24, 0x03	; 3
    10d2:	38 f4       	brcc	.+14     	; 0x10e2 <vfprintf+0x112>
    10d4:	44 e0       	ldi	r20, 0x04	; 4
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	a4 0e       	add	r10, r20
    10da:	b5 1e       	adc	r11, r21
    10dc:	5f e3       	ldi	r21, 0x3F	; 63
    10de:	59 83       	std	Y+1, r21	; 0x01
    10e0:	0f c0       	rjmp	.+30     	; 0x1100 <vfprintf+0x130>
    10e2:	93 36       	cpi	r25, 0x63	; 99
    10e4:	31 f0       	breq	.+12     	; 0x10f2 <vfprintf+0x122>
    10e6:	93 37       	cpi	r25, 0x73	; 115
    10e8:	79 f0       	breq	.+30     	; 0x1108 <vfprintf+0x138>
    10ea:	93 35       	cpi	r25, 0x53	; 83
    10ec:	09 f0       	breq	.+2      	; 0x10f0 <vfprintf+0x120>
    10ee:	52 c0       	rjmp	.+164    	; 0x1194 <vfprintf+0x1c4>
    10f0:	1f c0       	rjmp	.+62     	; 0x1130 <vfprintf+0x160>
    10f2:	f5 01       	movw	r30, r10
    10f4:	80 81       	ld	r24, Z
    10f6:	89 83       	std	Y+1, r24	; 0x01
    10f8:	42 e0       	ldi	r20, 0x02	; 2
    10fa:	50 e0       	ldi	r21, 0x00	; 0
    10fc:	a4 0e       	add	r10, r20
    10fe:	b5 1e       	adc	r11, r21
    1100:	61 01       	movw	r12, r2
    1102:	01 e0       	ldi	r16, 0x01	; 1
    1104:	10 e0       	ldi	r17, 0x00	; 0
    1106:	11 c0       	rjmp	.+34     	; 0x112a <vfprintf+0x15a>
    1108:	f5 01       	movw	r30, r10
    110a:	c0 80       	ld	r12, Z
    110c:	d1 80       	ldd	r13, Z+1	; 0x01
    110e:	f6 fc       	sbrc	r15, 6
    1110:	03 c0       	rjmp	.+6      	; 0x1118 <vfprintf+0x148>
    1112:	6f ef       	ldi	r22, 0xFF	; 255
    1114:	7f ef       	ldi	r23, 0xFF	; 255
    1116:	02 c0       	rjmp	.+4      	; 0x111c <vfprintf+0x14c>
    1118:	69 2d       	mov	r22, r9
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	42 e0       	ldi	r20, 0x02	; 2
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	a4 0e       	add	r10, r20
    1122:	b5 1e       	adc	r11, r21
    1124:	c6 01       	movw	r24, r12
    1126:	2d d1       	rcall	.+602    	; 0x1382 <strnlen>
    1128:	8c 01       	movw	r16, r24
    112a:	5f e7       	ldi	r21, 0x7F	; 127
    112c:	f5 22       	and	r15, r21
    112e:	13 c0       	rjmp	.+38     	; 0x1156 <vfprintf+0x186>
    1130:	f5 01       	movw	r30, r10
    1132:	c0 80       	ld	r12, Z
    1134:	d1 80       	ldd	r13, Z+1	; 0x01
    1136:	f6 fc       	sbrc	r15, 6
    1138:	03 c0       	rjmp	.+6      	; 0x1140 <vfprintf+0x170>
    113a:	6f ef       	ldi	r22, 0xFF	; 255
    113c:	7f ef       	ldi	r23, 0xFF	; 255
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <vfprintf+0x174>
    1140:	69 2d       	mov	r22, r9
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	42 e0       	ldi	r20, 0x02	; 2
    1146:	50 e0       	ldi	r21, 0x00	; 0
    1148:	a4 0e       	add	r10, r20
    114a:	b5 1e       	adc	r11, r21
    114c:	c6 01       	movw	r24, r12
    114e:	0e d1       	rcall	.+540    	; 0x136c <strnlen_P>
    1150:	8c 01       	movw	r16, r24
    1152:	50 e8       	ldi	r21, 0x80	; 128
    1154:	f5 2a       	or	r15, r21
    1156:	f3 fe       	sbrs	r15, 3
    1158:	06 c0       	rjmp	.+12     	; 0x1166 <vfprintf+0x196>
    115a:	18 c0       	rjmp	.+48     	; 0x118c <vfprintf+0x1bc>
    115c:	80 e2       	ldi	r24, 0x20	; 32
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	b3 01       	movw	r22, r6
    1162:	1a d1       	rcall	.+564    	; 0x1398 <fputc>
    1164:	ea 94       	dec	r14
    1166:	8e 2d       	mov	r24, r14
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	08 17       	cp	r16, r24
    116c:	19 07       	cpc	r17, r25
    116e:	b0 f3       	brcs	.-20     	; 0x115c <vfprintf+0x18c>
    1170:	0d c0       	rjmp	.+26     	; 0x118c <vfprintf+0x1bc>
    1172:	f6 01       	movw	r30, r12
    1174:	f7 fc       	sbrc	r15, 7
    1176:	85 91       	lpm	r24, Z+
    1178:	f7 fe       	sbrs	r15, 7
    117a:	81 91       	ld	r24, Z+
    117c:	6f 01       	movw	r12, r30
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	b3 01       	movw	r22, r6
    1182:	0a d1       	rcall	.+532    	; 0x1398 <fputc>
    1184:	e1 10       	cpse	r14, r1
    1186:	ea 94       	dec	r14
    1188:	01 50       	subi	r16, 0x01	; 1
    118a:	10 40       	sbci	r17, 0x00	; 0
    118c:	01 15       	cp	r16, r1
    118e:	11 05       	cpc	r17, r1
    1190:	81 f7       	brne	.-32     	; 0x1172 <vfprintf+0x1a2>
    1192:	e2 c0       	rjmp	.+452    	; 0x1358 <vfprintf+0x388>
    1194:	94 36       	cpi	r25, 0x64	; 100
    1196:	11 f0       	breq	.+4      	; 0x119c <vfprintf+0x1cc>
    1198:	99 36       	cpi	r25, 0x69	; 105
    119a:	61 f5       	brne	.+88     	; 0x11f4 <vfprintf+0x224>
    119c:	f7 fe       	sbrs	r15, 7
    119e:	08 c0       	rjmp	.+16     	; 0x11b0 <vfprintf+0x1e0>
    11a0:	f5 01       	movw	r30, r10
    11a2:	20 81       	ld	r18, Z
    11a4:	31 81       	ldd	r19, Z+1	; 0x01
    11a6:	42 81       	ldd	r20, Z+2	; 0x02
    11a8:	53 81       	ldd	r21, Z+3	; 0x03
    11aa:	84 e0       	ldi	r24, 0x04	; 4
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	0a c0       	rjmp	.+20     	; 0x11c4 <vfprintf+0x1f4>
    11b0:	f5 01       	movw	r30, r10
    11b2:	80 81       	ld	r24, Z
    11b4:	91 81       	ldd	r25, Z+1	; 0x01
    11b6:	9c 01       	movw	r18, r24
    11b8:	44 27       	eor	r20, r20
    11ba:	37 fd       	sbrc	r19, 7
    11bc:	40 95       	com	r20
    11be:	54 2f       	mov	r21, r20
    11c0:	82 e0       	ldi	r24, 0x02	; 2
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	a8 0e       	add	r10, r24
    11c6:	b9 1e       	adc	r11, r25
    11c8:	9f e6       	ldi	r25, 0x6F	; 111
    11ca:	f9 22       	and	r15, r25
    11cc:	57 ff       	sbrs	r21, 7
    11ce:	09 c0       	rjmp	.+18     	; 0x11e2 <vfprintf+0x212>
    11d0:	50 95       	com	r21
    11d2:	40 95       	com	r20
    11d4:	30 95       	com	r19
    11d6:	21 95       	neg	r18
    11d8:	3f 4f       	sbci	r19, 0xFF	; 255
    11da:	4f 4f       	sbci	r20, 0xFF	; 255
    11dc:	5f 4f       	sbci	r21, 0xFF	; 255
    11de:	e0 e8       	ldi	r30, 0x80	; 128
    11e0:	fe 2a       	or	r15, r30
    11e2:	ca 01       	movw	r24, r20
    11e4:	b9 01       	movw	r22, r18
    11e6:	a1 01       	movw	r20, r2
    11e8:	2a e0       	ldi	r18, 0x0A	; 10
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	01 d1       	rcall	.+514    	; 0x13f0 <__ultoa_invert>
    11ee:	d8 2e       	mov	r13, r24
    11f0:	d2 18       	sub	r13, r2
    11f2:	3f c0       	rjmp	.+126    	; 0x1272 <vfprintf+0x2a2>
    11f4:	95 37       	cpi	r25, 0x75	; 117
    11f6:	29 f4       	brne	.+10     	; 0x1202 <vfprintf+0x232>
    11f8:	1f 2d       	mov	r17, r15
    11fa:	1f 7e       	andi	r17, 0xEF	; 239
    11fc:	2a e0       	ldi	r18, 0x0A	; 10
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	1d c0       	rjmp	.+58     	; 0x123c <vfprintf+0x26c>
    1202:	1f 2d       	mov	r17, r15
    1204:	19 7f       	andi	r17, 0xF9	; 249
    1206:	9f 36       	cpi	r25, 0x6F	; 111
    1208:	61 f0       	breq	.+24     	; 0x1222 <vfprintf+0x252>
    120a:	90 37       	cpi	r25, 0x70	; 112
    120c:	20 f4       	brcc	.+8      	; 0x1216 <vfprintf+0x246>
    120e:	98 35       	cpi	r25, 0x58	; 88
    1210:	09 f0       	breq	.+2      	; 0x1214 <vfprintf+0x244>
    1212:	a5 c0       	rjmp	.+330    	; 0x135e <vfprintf+0x38e>
    1214:	0f c0       	rjmp	.+30     	; 0x1234 <vfprintf+0x264>
    1216:	90 37       	cpi	r25, 0x70	; 112
    1218:	39 f0       	breq	.+14     	; 0x1228 <vfprintf+0x258>
    121a:	98 37       	cpi	r25, 0x78	; 120
    121c:	09 f0       	breq	.+2      	; 0x1220 <vfprintf+0x250>
    121e:	9f c0       	rjmp	.+318    	; 0x135e <vfprintf+0x38e>
    1220:	04 c0       	rjmp	.+8      	; 0x122a <vfprintf+0x25a>
    1222:	28 e0       	ldi	r18, 0x08	; 8
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	0a c0       	rjmp	.+20     	; 0x123c <vfprintf+0x26c>
    1228:	10 61       	ori	r17, 0x10	; 16
    122a:	14 fd       	sbrc	r17, 4
    122c:	14 60       	ori	r17, 0x04	; 4
    122e:	20 e1       	ldi	r18, 0x10	; 16
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	04 c0       	rjmp	.+8      	; 0x123c <vfprintf+0x26c>
    1234:	14 fd       	sbrc	r17, 4
    1236:	16 60       	ori	r17, 0x06	; 6
    1238:	20 e1       	ldi	r18, 0x10	; 16
    123a:	32 e0       	ldi	r19, 0x02	; 2
    123c:	17 ff       	sbrs	r17, 7
    123e:	08 c0       	rjmp	.+16     	; 0x1250 <vfprintf+0x280>
    1240:	f5 01       	movw	r30, r10
    1242:	60 81       	ld	r22, Z
    1244:	71 81       	ldd	r23, Z+1	; 0x01
    1246:	82 81       	ldd	r24, Z+2	; 0x02
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	44 e0       	ldi	r20, 0x04	; 4
    124c:	50 e0       	ldi	r21, 0x00	; 0
    124e:	08 c0       	rjmp	.+16     	; 0x1260 <vfprintf+0x290>
    1250:	f5 01       	movw	r30, r10
    1252:	80 81       	ld	r24, Z
    1254:	91 81       	ldd	r25, Z+1	; 0x01
    1256:	bc 01       	movw	r22, r24
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	42 e0       	ldi	r20, 0x02	; 2
    125e:	50 e0       	ldi	r21, 0x00	; 0
    1260:	a4 0e       	add	r10, r20
    1262:	b5 1e       	adc	r11, r21
    1264:	a1 01       	movw	r20, r2
    1266:	c4 d0       	rcall	.+392    	; 0x13f0 <__ultoa_invert>
    1268:	d8 2e       	mov	r13, r24
    126a:	d2 18       	sub	r13, r2
    126c:	8f e7       	ldi	r24, 0x7F	; 127
    126e:	f8 2e       	mov	r15, r24
    1270:	f1 22       	and	r15, r17
    1272:	f6 fe       	sbrs	r15, 6
    1274:	0b c0       	rjmp	.+22     	; 0x128c <vfprintf+0x2bc>
    1276:	5e ef       	ldi	r21, 0xFE	; 254
    1278:	f5 22       	and	r15, r21
    127a:	d9 14       	cp	r13, r9
    127c:	38 f4       	brcc	.+14     	; 0x128c <vfprintf+0x2bc>
    127e:	f4 fe       	sbrs	r15, 4
    1280:	07 c0       	rjmp	.+14     	; 0x1290 <vfprintf+0x2c0>
    1282:	f2 fc       	sbrc	r15, 2
    1284:	05 c0       	rjmp	.+10     	; 0x1290 <vfprintf+0x2c0>
    1286:	8f ee       	ldi	r24, 0xEF	; 239
    1288:	f8 22       	and	r15, r24
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <vfprintf+0x2c0>
    128c:	1d 2d       	mov	r17, r13
    128e:	01 c0       	rjmp	.+2      	; 0x1292 <vfprintf+0x2c2>
    1290:	19 2d       	mov	r17, r9
    1292:	f4 fe       	sbrs	r15, 4
    1294:	0d c0       	rjmp	.+26     	; 0x12b0 <vfprintf+0x2e0>
    1296:	fe 01       	movw	r30, r28
    1298:	ed 0d       	add	r30, r13
    129a:	f1 1d       	adc	r31, r1
    129c:	80 81       	ld	r24, Z
    129e:	80 33       	cpi	r24, 0x30	; 48
    12a0:	19 f4       	brne	.+6      	; 0x12a8 <vfprintf+0x2d8>
    12a2:	99 ee       	ldi	r25, 0xE9	; 233
    12a4:	f9 22       	and	r15, r25
    12a6:	08 c0       	rjmp	.+16     	; 0x12b8 <vfprintf+0x2e8>
    12a8:	1f 5f       	subi	r17, 0xFF	; 255
    12aa:	f2 fe       	sbrs	r15, 2
    12ac:	05 c0       	rjmp	.+10     	; 0x12b8 <vfprintf+0x2e8>
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <vfprintf+0x2e6>
    12b0:	8f 2d       	mov	r24, r15
    12b2:	86 78       	andi	r24, 0x86	; 134
    12b4:	09 f0       	breq	.+2      	; 0x12b8 <vfprintf+0x2e8>
    12b6:	1f 5f       	subi	r17, 0xFF	; 255
    12b8:	0f 2d       	mov	r16, r15
    12ba:	f3 fc       	sbrc	r15, 3
    12bc:	13 c0       	rjmp	.+38     	; 0x12e4 <vfprintf+0x314>
    12be:	f0 fe       	sbrs	r15, 0
    12c0:	0e c0       	rjmp	.+28     	; 0x12de <vfprintf+0x30e>
    12c2:	1e 15       	cp	r17, r14
    12c4:	10 f0       	brcs	.+4      	; 0x12ca <vfprintf+0x2fa>
    12c6:	9d 2c       	mov	r9, r13
    12c8:	0a c0       	rjmp	.+20     	; 0x12de <vfprintf+0x30e>
    12ca:	9d 2c       	mov	r9, r13
    12cc:	9e 0c       	add	r9, r14
    12ce:	91 1a       	sub	r9, r17
    12d0:	1e 2d       	mov	r17, r14
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <vfprintf+0x30e>
    12d4:	80 e2       	ldi	r24, 0x20	; 32
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	b3 01       	movw	r22, r6
    12da:	5e d0       	rcall	.+188    	; 0x1398 <fputc>
    12dc:	1f 5f       	subi	r17, 0xFF	; 255
    12de:	1e 15       	cp	r17, r14
    12e0:	c8 f3       	brcs	.-14     	; 0x12d4 <vfprintf+0x304>
    12e2:	04 c0       	rjmp	.+8      	; 0x12ec <vfprintf+0x31c>
    12e4:	1e 15       	cp	r17, r14
    12e6:	10 f4       	brcc	.+4      	; 0x12ec <vfprintf+0x31c>
    12e8:	e1 1a       	sub	r14, r17
    12ea:	01 c0       	rjmp	.+2      	; 0x12ee <vfprintf+0x31e>
    12ec:	ee 24       	eor	r14, r14
    12ee:	04 ff       	sbrs	r16, 4
    12f0:	0e c0       	rjmp	.+28     	; 0x130e <vfprintf+0x33e>
    12f2:	80 e3       	ldi	r24, 0x30	; 48
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	b3 01       	movw	r22, r6
    12f8:	4f d0       	rcall	.+158    	; 0x1398 <fputc>
    12fa:	02 ff       	sbrs	r16, 2
    12fc:	1b c0       	rjmp	.+54     	; 0x1334 <vfprintf+0x364>
    12fe:	01 fd       	sbrc	r16, 1
    1300:	03 c0       	rjmp	.+6      	; 0x1308 <vfprintf+0x338>
    1302:	88 e7       	ldi	r24, 0x78	; 120
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e c0       	rjmp	.+28     	; 0x1324 <vfprintf+0x354>
    1308:	88 e5       	ldi	r24, 0x58	; 88
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	0b c0       	rjmp	.+22     	; 0x1324 <vfprintf+0x354>
    130e:	80 2f       	mov	r24, r16
    1310:	86 78       	andi	r24, 0x86	; 134
    1312:	81 f0       	breq	.+32     	; 0x1334 <vfprintf+0x364>
    1314:	01 ff       	sbrs	r16, 1
    1316:	02 c0       	rjmp	.+4      	; 0x131c <vfprintf+0x34c>
    1318:	8b e2       	ldi	r24, 0x2B	; 43
    131a:	01 c0       	rjmp	.+2      	; 0x131e <vfprintf+0x34e>
    131c:	80 e2       	ldi	r24, 0x20	; 32
    131e:	f7 fc       	sbrc	r15, 7
    1320:	8d e2       	ldi	r24, 0x2D	; 45
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	b3 01       	movw	r22, r6
    1326:	38 d0       	rcall	.+112    	; 0x1398 <fputc>
    1328:	05 c0       	rjmp	.+10     	; 0x1334 <vfprintf+0x364>
    132a:	80 e3       	ldi	r24, 0x30	; 48
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	b3 01       	movw	r22, r6
    1330:	33 d0       	rcall	.+102    	; 0x1398 <fputc>
    1332:	9a 94       	dec	r9
    1334:	d9 14       	cp	r13, r9
    1336:	c8 f3       	brcs	.-14     	; 0x132a <vfprintf+0x35a>
    1338:	da 94       	dec	r13
    133a:	f1 01       	movw	r30, r2
    133c:	ed 0d       	add	r30, r13
    133e:	f1 1d       	adc	r31, r1
    1340:	80 81       	ld	r24, Z
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	b3 01       	movw	r22, r6
    1346:	28 d0       	rcall	.+80     	; 0x1398 <fputc>
    1348:	dd 20       	and	r13, r13
    134a:	b1 f7       	brne	.-20     	; 0x1338 <vfprintf+0x368>
    134c:	05 c0       	rjmp	.+10     	; 0x1358 <vfprintf+0x388>
    134e:	80 e2       	ldi	r24, 0x20	; 32
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	b3 01       	movw	r22, r6
    1354:	21 d0       	rcall	.+66     	; 0x1398 <fputc>
    1356:	ea 94       	dec	r14
    1358:	ee 20       	and	r14, r14
    135a:	c9 f7       	brne	.-14     	; 0x134e <vfprintf+0x37e>
    135c:	50 ce       	rjmp	.-864    	; 0xffe <vfprintf+0x2e>
    135e:	f3 01       	movw	r30, r6
    1360:	66 81       	ldd	r22, Z+6	; 0x06
    1362:	77 81       	ldd	r23, Z+7	; 0x07
    1364:	cb 01       	movw	r24, r22
    1366:	2b 96       	adiw	r28, 0x0b	; 11
    1368:	e2 e1       	ldi	r30, 0x12	; 18
    136a:	bc c0       	rjmp	.+376    	; 0x14e4 <__epilogue_restores__>

0000136c <strnlen_P>:
    136c:	fc 01       	movw	r30, r24
    136e:	05 90       	lpm	r0, Z+
    1370:	61 50       	subi	r22, 0x01	; 1
    1372:	70 40       	sbci	r23, 0x00	; 0
    1374:	01 10       	cpse	r0, r1
    1376:	d8 f7       	brcc	.-10     	; 0x136e <strnlen_P+0x2>
    1378:	80 95       	com	r24
    137a:	90 95       	com	r25
    137c:	8e 0f       	add	r24, r30
    137e:	9f 1f       	adc	r25, r31
    1380:	08 95       	ret

00001382 <strnlen>:
    1382:	fc 01       	movw	r30, r24
    1384:	61 50       	subi	r22, 0x01	; 1
    1386:	70 40       	sbci	r23, 0x00	; 0
    1388:	01 90       	ld	r0, Z+
    138a:	01 10       	cpse	r0, r1
    138c:	d8 f7       	brcc	.-10     	; 0x1384 <strnlen+0x2>
    138e:	80 95       	com	r24
    1390:	90 95       	com	r25
    1392:	8e 0f       	add	r24, r30
    1394:	9f 1f       	adc	r25, r31
    1396:	08 95       	ret

00001398 <fputc>:
    1398:	0f 93       	push	r16
    139a:	1f 93       	push	r17
    139c:	cf 93       	push	r28
    139e:	df 93       	push	r29
    13a0:	8c 01       	movw	r16, r24
    13a2:	eb 01       	movw	r28, r22
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	81 ff       	sbrs	r24, 1
    13a8:	1b c0       	rjmp	.+54     	; 0x13e0 <fputc+0x48>
    13aa:	82 ff       	sbrs	r24, 2
    13ac:	0d c0       	rjmp	.+26     	; 0x13c8 <fputc+0x30>
    13ae:	2e 81       	ldd	r18, Y+6	; 0x06
    13b0:	3f 81       	ldd	r19, Y+7	; 0x07
    13b2:	8c 81       	ldd	r24, Y+4	; 0x04
    13b4:	9d 81       	ldd	r25, Y+5	; 0x05
    13b6:	28 17       	cp	r18, r24
    13b8:	39 07       	cpc	r19, r25
    13ba:	64 f4       	brge	.+24     	; 0x13d4 <fputc+0x3c>
    13bc:	e8 81       	ld	r30, Y
    13be:	f9 81       	ldd	r31, Y+1	; 0x01
    13c0:	01 93       	st	Z+, r16
    13c2:	f9 83       	std	Y+1, r31	; 0x01
    13c4:	e8 83       	st	Y, r30
    13c6:	06 c0       	rjmp	.+12     	; 0x13d4 <fputc+0x3c>
    13c8:	e8 85       	ldd	r30, Y+8	; 0x08
    13ca:	f9 85       	ldd	r31, Y+9	; 0x09
    13cc:	80 2f       	mov	r24, r16
    13ce:	09 95       	icall
    13d0:	89 2b       	or	r24, r25
    13d2:	31 f4       	brne	.+12     	; 0x13e0 <fputc+0x48>
    13d4:	8e 81       	ldd	r24, Y+6	; 0x06
    13d6:	9f 81       	ldd	r25, Y+7	; 0x07
    13d8:	01 96       	adiw	r24, 0x01	; 1
    13da:	9f 83       	std	Y+7, r25	; 0x07
    13dc:	8e 83       	std	Y+6, r24	; 0x06
    13de:	02 c0       	rjmp	.+4      	; 0x13e4 <fputc+0x4c>
    13e0:	0f ef       	ldi	r16, 0xFF	; 255
    13e2:	1f ef       	ldi	r17, 0xFF	; 255
    13e4:	c8 01       	movw	r24, r16
    13e6:	df 91       	pop	r29
    13e8:	cf 91       	pop	r28
    13ea:	1f 91       	pop	r17
    13ec:	0f 91       	pop	r16
    13ee:	08 95       	ret

000013f0 <__ultoa_invert>:
    13f0:	fa 01       	movw	r30, r20
    13f2:	aa 27       	eor	r26, r26
    13f4:	28 30       	cpi	r18, 0x08	; 8
    13f6:	51 f1       	breq	.+84     	; 0x144c <__ultoa_invert+0x5c>
    13f8:	20 31       	cpi	r18, 0x10	; 16
    13fa:	81 f1       	breq	.+96     	; 0x145c <__ultoa_invert+0x6c>
    13fc:	e8 94       	clt
    13fe:	6f 93       	push	r22
    1400:	6e 7f       	andi	r22, 0xFE	; 254
    1402:	6e 5f       	subi	r22, 0xFE	; 254
    1404:	7f 4f       	sbci	r23, 0xFF	; 255
    1406:	8f 4f       	sbci	r24, 0xFF	; 255
    1408:	9f 4f       	sbci	r25, 0xFF	; 255
    140a:	af 4f       	sbci	r26, 0xFF	; 255
    140c:	b1 e0       	ldi	r27, 0x01	; 1
    140e:	3e d0       	rcall	.+124    	; 0x148c <__ultoa_invert+0x9c>
    1410:	b4 e0       	ldi	r27, 0x04	; 4
    1412:	3c d0       	rcall	.+120    	; 0x148c <__ultoa_invert+0x9c>
    1414:	67 0f       	add	r22, r23
    1416:	78 1f       	adc	r23, r24
    1418:	89 1f       	adc	r24, r25
    141a:	9a 1f       	adc	r25, r26
    141c:	a1 1d       	adc	r26, r1
    141e:	68 0f       	add	r22, r24
    1420:	79 1f       	adc	r23, r25
    1422:	8a 1f       	adc	r24, r26
    1424:	91 1d       	adc	r25, r1
    1426:	a1 1d       	adc	r26, r1
    1428:	6a 0f       	add	r22, r26
    142a:	71 1d       	adc	r23, r1
    142c:	81 1d       	adc	r24, r1
    142e:	91 1d       	adc	r25, r1
    1430:	a1 1d       	adc	r26, r1
    1432:	20 d0       	rcall	.+64     	; 0x1474 <__ultoa_invert+0x84>
    1434:	09 f4       	brne	.+2      	; 0x1438 <__ultoa_invert+0x48>
    1436:	68 94       	set
    1438:	3f 91       	pop	r19
    143a:	2a e0       	ldi	r18, 0x0A	; 10
    143c:	26 9f       	mul	r18, r22
    143e:	11 24       	eor	r1, r1
    1440:	30 19       	sub	r19, r0
    1442:	30 5d       	subi	r19, 0xD0	; 208
    1444:	31 93       	st	Z+, r19
    1446:	de f6       	brtc	.-74     	; 0x13fe <__ultoa_invert+0xe>
    1448:	cf 01       	movw	r24, r30
    144a:	08 95       	ret
    144c:	46 2f       	mov	r20, r22
    144e:	47 70       	andi	r20, 0x07	; 7
    1450:	40 5d       	subi	r20, 0xD0	; 208
    1452:	41 93       	st	Z+, r20
    1454:	b3 e0       	ldi	r27, 0x03	; 3
    1456:	0f d0       	rcall	.+30     	; 0x1476 <__ultoa_invert+0x86>
    1458:	c9 f7       	brne	.-14     	; 0x144c <__ultoa_invert+0x5c>
    145a:	f6 cf       	rjmp	.-20     	; 0x1448 <__ultoa_invert+0x58>
    145c:	46 2f       	mov	r20, r22
    145e:	4f 70       	andi	r20, 0x0F	; 15
    1460:	40 5d       	subi	r20, 0xD0	; 208
    1462:	4a 33       	cpi	r20, 0x3A	; 58
    1464:	18 f0       	brcs	.+6      	; 0x146c <__ultoa_invert+0x7c>
    1466:	49 5d       	subi	r20, 0xD9	; 217
    1468:	31 fd       	sbrc	r19, 1
    146a:	40 52       	subi	r20, 0x20	; 32
    146c:	41 93       	st	Z+, r20
    146e:	02 d0       	rcall	.+4      	; 0x1474 <__ultoa_invert+0x84>
    1470:	a9 f7       	brne	.-22     	; 0x145c <__ultoa_invert+0x6c>
    1472:	ea cf       	rjmp	.-44     	; 0x1448 <__ultoa_invert+0x58>
    1474:	b4 e0       	ldi	r27, 0x04	; 4
    1476:	a6 95       	lsr	r26
    1478:	97 95       	ror	r25
    147a:	87 95       	ror	r24
    147c:	77 95       	ror	r23
    147e:	67 95       	ror	r22
    1480:	ba 95       	dec	r27
    1482:	c9 f7       	brne	.-14     	; 0x1476 <__ultoa_invert+0x86>
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	61 05       	cpc	r22, r1
    1488:	71 05       	cpc	r23, r1
    148a:	08 95       	ret
    148c:	9b 01       	movw	r18, r22
    148e:	ac 01       	movw	r20, r24
    1490:	0a 2e       	mov	r0, r26
    1492:	06 94       	lsr	r0
    1494:	57 95       	ror	r21
    1496:	47 95       	ror	r20
    1498:	37 95       	ror	r19
    149a:	27 95       	ror	r18
    149c:	ba 95       	dec	r27
    149e:	c9 f7       	brne	.-14     	; 0x1492 <__ultoa_invert+0xa2>
    14a0:	62 0f       	add	r22, r18
    14a2:	73 1f       	adc	r23, r19
    14a4:	84 1f       	adc	r24, r20
    14a6:	95 1f       	adc	r25, r21
    14a8:	a0 1d       	adc	r26, r0
    14aa:	08 95       	ret

000014ac <__prologue_saves__>:
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	4f 92       	push	r4
    14b2:	5f 92       	push	r5
    14b4:	6f 92       	push	r6
    14b6:	7f 92       	push	r7
    14b8:	8f 92       	push	r8
    14ba:	9f 92       	push	r9
    14bc:	af 92       	push	r10
    14be:	bf 92       	push	r11
    14c0:	cf 92       	push	r12
    14c2:	df 92       	push	r13
    14c4:	ef 92       	push	r14
    14c6:	ff 92       	push	r15
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	cd b7       	in	r28, 0x3d	; 61
    14d2:	de b7       	in	r29, 0x3e	; 62
    14d4:	ca 1b       	sub	r28, r26
    14d6:	db 0b       	sbc	r29, r27
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	f8 94       	cli
    14dc:	de bf       	out	0x3e, r29	; 62
    14de:	0f be       	out	0x3f, r0	; 63
    14e0:	cd bf       	out	0x3d, r28	; 61
    14e2:	09 94       	ijmp

000014e4 <__epilogue_restores__>:
    14e4:	2a 88       	ldd	r2, Y+18	; 0x12
    14e6:	39 88       	ldd	r3, Y+17	; 0x11
    14e8:	48 88       	ldd	r4, Y+16	; 0x10
    14ea:	5f 84       	ldd	r5, Y+15	; 0x0f
    14ec:	6e 84       	ldd	r6, Y+14	; 0x0e
    14ee:	7d 84       	ldd	r7, Y+13	; 0x0d
    14f0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14f2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14f6:	b9 84       	ldd	r11, Y+9	; 0x09
    14f8:	c8 84       	ldd	r12, Y+8	; 0x08
    14fa:	df 80       	ldd	r13, Y+7	; 0x07
    14fc:	ee 80       	ldd	r14, Y+6	; 0x06
    14fe:	fd 80       	ldd	r15, Y+5	; 0x05
    1500:	0c 81       	ldd	r16, Y+4	; 0x04
    1502:	1b 81       	ldd	r17, Y+3	; 0x03
    1504:	aa 81       	ldd	r26, Y+2	; 0x02
    1506:	b9 81       	ldd	r27, Y+1	; 0x01
    1508:	ce 0f       	add	r28, r30
    150a:	d1 1d       	adc	r29, r1
    150c:	0f b6       	in	r0, 0x3f	; 63
    150e:	f8 94       	cli
    1510:	de bf       	out	0x3e, r29	; 62
    1512:	0f be       	out	0x3f, r0	; 63
    1514:	cd bf       	out	0x3d, r28	; 61
    1516:	ed 01       	movw	r28, r26
    1518:	08 95       	ret

0000151a <_exit>:
    151a:	f8 94       	cli

0000151c <__stop_program>:
    151c:	ff cf       	rjmp	.-2      	; 0x151c <__stop_program>
